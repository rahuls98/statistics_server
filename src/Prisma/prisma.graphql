enum ActivityType {
  COMMENT
  STATUS_CHANGE
}

type AggregateAutoIncrement {
  count: Int!
}

type AggregateBuyer {
  count: Int!
}

type AggregateCompany {
  count: Int!
}

type AggregateComponent {
  count: Int!
}

type AggregateDevice {
  count: Int!
}

type AggregateFile {
  count: Int!
}

type AggregateFirebaseProfile {
  count: Int!
}

type AggregateInvoice {
  count: Int!
}

type AggregateModel {
  count: Int!
}

type AggregateModelConfig {
  count: Int!
}

type AggregatePeripheral {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregateProduct {
  count: Int!
}

type AggregateProductSpec {
  count: Int!
}

type AggregateRide {
  count: Int!
}

type AggregateServiceTicket {
  count: Int!
}

type AggregateStakeHolder {
  count: Int!
}

type AggregateTicketActivity {
  count: Int!
}

type AggregateTrackingPermission {
  count: Int!
}

type AggregateTxInfo {
  count: Int!
}

type AggregateTxNode {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVehicle {
  count: Int!
}

type AggregateWarranty {
  count: Int!
}

type AutoIncrement {
  id: ID!
  serviceTicketSequence: Int!
  orderSequence: Int!
  status: statusType
}

type AutoIncrementConnection {
  pageInfo: PageInfo!
  edges: [AutoIncrementEdge]!
  aggregate: AggregateAutoIncrement!
}

input AutoIncrementCreateInput {
  serviceTicketSequence: Int
  orderSequence: Int
  status: statusType
}

type AutoIncrementEdge {
  node: AutoIncrement!
  cursor: String!
}

enum AutoIncrementOrderByInput {
  id_ASC
  id_DESC
  serviceTicketSequence_ASC
  serviceTicketSequence_DESC
  orderSequence_ASC
  orderSequence_DESC
  status_ASC
  status_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AutoIncrementPreviousValues {
  id: ID!
  serviceTicketSequence: Int!
  orderSequence: Int!
  status: statusType
}

type AutoIncrementSubscriptionPayload {
  mutation: MutationType!
  node: AutoIncrement
  updatedFields: [String!]
  previousValues: AutoIncrementPreviousValues
}

input AutoIncrementSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AutoIncrementWhereInput
  AND: [AutoIncrementSubscriptionWhereInput!]
  OR: [AutoIncrementSubscriptionWhereInput!]
  NOT: [AutoIncrementSubscriptionWhereInput!]
}

input AutoIncrementUpdateInput {
  serviceTicketSequence: Int
  orderSequence: Int
  status: statusType
}

input AutoIncrementUpdateManyMutationInput {
  serviceTicketSequence: Int
  orderSequence: Int
  status: statusType
}

input AutoIncrementWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  serviceTicketSequence: Int
  serviceTicketSequence_not: Int
  serviceTicketSequence_in: [Int!]
  serviceTicketSequence_not_in: [Int!]
  serviceTicketSequence_lt: Int
  serviceTicketSequence_lte: Int
  serviceTicketSequence_gt: Int
  serviceTicketSequence_gte: Int
  orderSequence: Int
  orderSequence_not: Int
  orderSequence_in: [Int!]
  orderSequence_not_in: [Int!]
  orderSequence_lt: Int
  orderSequence_lte: Int
  orderSequence_gt: Int
  orderSequence_gte: Int
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  AND: [AutoIncrementWhereInput!]
  OR: [AutoIncrementWhereInput!]
  NOT: [AutoIncrementWhereInput!]
}

input AutoIncrementWhereUniqueInput {
  id: ID
}

type BatchPayload {
  count: Long!
}

type Buyer {
  id: ID!
  firstName: String
  lastName: String
  parentName: String
  phone: String
  email: String
  aadharCard: String
  address: String
  dateOfBirth: DateTime
  identityProof: String
  addressProof: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BuyerConnection {
  pageInfo: PageInfo!
  edges: [BuyerEdge]!
  aggregate: AggregateBuyer!
}

input BuyerCreateInput {
  firstName: String
  lastName: String
  parentName: String
  phone: String
  email: String
  aadharCard: String
  address: String
  dateOfBirth: DateTime
  identityProof: String
  addressProof: String
}

input BuyerCreateOneInput {
  create: BuyerCreateInput
  connect: BuyerWhereUniqueInput
}

type BuyerEdge {
  node: Buyer!
  cursor: String!
}

enum BuyerOrderByInput {
  id_ASC
  id_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  parentName_ASC
  parentName_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  aadharCard_ASC
  aadharCard_DESC
  address_ASC
  address_DESC
  dateOfBirth_ASC
  dateOfBirth_DESC
  identityProof_ASC
  identityProof_DESC
  addressProof_ASC
  addressProof_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type BuyerPreviousValues {
  id: ID!
  firstName: String
  lastName: String
  parentName: String
  phone: String
  email: String
  aadharCard: String
  address: String
  dateOfBirth: DateTime
  identityProof: String
  addressProof: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BuyerSubscriptionPayload {
  mutation: MutationType!
  node: Buyer
  updatedFields: [String!]
  previousValues: BuyerPreviousValues
}

input BuyerSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BuyerWhereInput
  AND: [BuyerSubscriptionWhereInput!]
  OR: [BuyerSubscriptionWhereInput!]
  NOT: [BuyerSubscriptionWhereInput!]
}

input BuyerUpdateDataInput {
  firstName: String
  lastName: String
  parentName: String
  phone: String
  email: String
  aadharCard: String
  address: String
  dateOfBirth: DateTime
  identityProof: String
  addressProof: String
}

input BuyerUpdateInput {
  firstName: String
  lastName: String
  parentName: String
  phone: String
  email: String
  aadharCard: String
  address: String
  dateOfBirth: DateTime
  identityProof: String
  addressProof: String
}

input BuyerUpdateManyMutationInput {
  firstName: String
  lastName: String
  parentName: String
  phone: String
  email: String
  aadharCard: String
  address: String
  dateOfBirth: DateTime
  identityProof: String
  addressProof: String
}

input BuyerUpdateOneInput {
  create: BuyerCreateInput
  update: BuyerUpdateDataInput
  upsert: BuyerUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: BuyerWhereUniqueInput
}

input BuyerUpsertNestedInput {
  update: BuyerUpdateDataInput!
  create: BuyerCreateInput!
}

input BuyerWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  parentName: String
  parentName_not: String
  parentName_in: [String!]
  parentName_not_in: [String!]
  parentName_lt: String
  parentName_lte: String
  parentName_gt: String
  parentName_gte: String
  parentName_contains: String
  parentName_not_contains: String
  parentName_starts_with: String
  parentName_not_starts_with: String
  parentName_ends_with: String
  parentName_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  aadharCard: String
  aadharCard_not: String
  aadharCard_in: [String!]
  aadharCard_not_in: [String!]
  aadharCard_lt: String
  aadharCard_lte: String
  aadharCard_gt: String
  aadharCard_gte: String
  aadharCard_contains: String
  aadharCard_not_contains: String
  aadharCard_starts_with: String
  aadharCard_not_starts_with: String
  aadharCard_ends_with: String
  aadharCard_not_ends_with: String
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  dateOfBirth: DateTime
  dateOfBirth_not: DateTime
  dateOfBirth_in: [DateTime!]
  dateOfBirth_not_in: [DateTime!]
  dateOfBirth_lt: DateTime
  dateOfBirth_lte: DateTime
  dateOfBirth_gt: DateTime
  dateOfBirth_gte: DateTime
  identityProof: String
  identityProof_not: String
  identityProof_in: [String!]
  identityProof_not_in: [String!]
  identityProof_lt: String
  identityProof_lte: String
  identityProof_gt: String
  identityProof_gte: String
  identityProof_contains: String
  identityProof_not_contains: String
  identityProof_starts_with: String
  identityProof_not_starts_with: String
  identityProof_ends_with: String
  identityProof_not_ends_with: String
  addressProof: String
  addressProof_not: String
  addressProof_in: [String!]
  addressProof_not_in: [String!]
  addressProof_lt: String
  addressProof_lte: String
  addressProof_gt: String
  addressProof_gte: String
  addressProof_contains: String
  addressProof_not_contains: String
  addressProof_starts_with: String
  addressProof_not_starts_with: String
  addressProof_ends_with: String
  addressProof_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [BuyerWhereInput!]
  OR: [BuyerWhereInput!]
  NOT: [BuyerWhereInput!]
}

input BuyerWhereUniqueInput {
  id: ID
}

type Company {
  id: ID!
  name: String!
  txInfo: TxNode
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: File
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  logoBuffer: String
  models(where: ModelWhereInput, orderBy: ModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Model!]
  components(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product!]
  inventory(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Component!]
  vehicles(where: VehicleWhereInput, orderBy: VehicleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vehicle!]
  type: companyType
  distributors(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company!]
  dealers(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company!]
  oems(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company!]
  suppliers(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company!]
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CompanyConnection {
  pageInfo: PageInfo!
  edges: [CompanyEdge]!
  aggregate: AggregateCompany!
}

input CompanyCreateInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateManyInput {
  create: [CompanyCreateInput!]
  connect: [CompanyWhereUniqueInput!]
}

input CompanyCreateManyWithoutDealersInput {
  create: [CompanyCreateWithoutDealersInput!]
  connect: [CompanyWhereUniqueInput!]
}

input CompanyCreateManyWithoutDistributorsInput {
  create: [CompanyCreateWithoutDistributorsInput!]
  connect: [CompanyWhereUniqueInput!]
}

input CompanyCreateManyWithoutOemsInput {
  create: [CompanyCreateWithoutOemsInput!]
  connect: [CompanyWhereUniqueInput!]
}

input CompanyCreateManyWithoutSuppliersInput {
  create: [CompanyCreateWithoutSuppliersInput!]
  connect: [CompanyWhereUniqueInput!]
}

input CompanyCreateOneInput {
  create: CompanyCreateInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateOneWithoutComponentsInput {
  create: CompanyCreateWithoutComponentsInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateOneWithoutInventoryInput {
  create: CompanyCreateWithoutInventoryInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateOneWithoutModelsInput {
  create: CompanyCreateWithoutModelsInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateOneWithoutTxInfoInput {
  create: CompanyCreateWithoutTxInfoInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateOneWithoutUsersInput {
  create: CompanyCreateWithoutUsersInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateOneWithoutVehiclesInput {
  create: CompanyCreateWithoutVehiclesInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateWithoutComponentsInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutDealersInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutDistributorsInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutInventoryInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutModelsInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutOemsInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutSuppliersInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutTxInfoInput {
  name: String!
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutUsersInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  vehicles: VehicleCreateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyCreateWithoutVehiclesInput {
  name: String!
  txInfo: TxNodeCreateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileCreateOneInput
  users: UserCreateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelCreateManyWithoutCompanyInput
  components: ProductCreateManyWithoutCompanyInput
  inventory: ComponentCreateManyWithoutOwnerInput
  type: companyType
  distributors: CompanyCreateManyWithoutDistributorsInput
  dealers: CompanyCreateManyWithoutDealersInput
  oems: CompanyCreateManyWithoutOemsInput
  suppliers: CompanyCreateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

type CompanyEdge {
  node: Company!
  cursor: String!
}

enum CompanyOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  code_ASC
  code_DESC
  phone_ASC
  phone_DESC
  phone1_ASC
  phone1_DESC
  phone2_ASC
  phone2_DESC
  address_ASC
  address_DESC
  logoBuffer_ASC
  logoBuffer_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  gstNumber_ASC
  gstNumber_DESC
  panNumber_ASC
  panNumber_DESC
  cinNumber_ASC
  cinNumber_DESC
  ownerAadharCardNumber_ASC
  ownerAadharCardNumber_DESC
  notes_ASC
  notes_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CompanyPreviousValues {
  id: ID!
  name: String!
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  logoBuffer: String
  type: companyType
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CompanyScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone1: String
  phone1_not: String
  phone1_in: [String!]
  phone1_not_in: [String!]
  phone1_lt: String
  phone1_lte: String
  phone1_gt: String
  phone1_gte: String
  phone1_contains: String
  phone1_not_contains: String
  phone1_starts_with: String
  phone1_not_starts_with: String
  phone1_ends_with: String
  phone1_not_ends_with: String
  phone2: String
  phone2_not: String
  phone2_in: [String!]
  phone2_not_in: [String!]
  phone2_lt: String
  phone2_lte: String
  phone2_gt: String
  phone2_gte: String
  phone2_contains: String
  phone2_not_contains: String
  phone2_starts_with: String
  phone2_not_starts_with: String
  phone2_ends_with: String
  phone2_not_ends_with: String
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  logoBuffer: String
  logoBuffer_not: String
  logoBuffer_in: [String!]
  logoBuffer_not_in: [String!]
  logoBuffer_lt: String
  logoBuffer_lte: String
  logoBuffer_gt: String
  logoBuffer_gte: String
  logoBuffer_contains: String
  logoBuffer_not_contains: String
  logoBuffer_starts_with: String
  logoBuffer_not_starts_with: String
  logoBuffer_ends_with: String
  logoBuffer_not_ends_with: String
  type: companyType
  type_not: companyType
  type_in: [companyType!]
  type_not_in: [companyType!]
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  gstNumber: String
  gstNumber_not: String
  gstNumber_in: [String!]
  gstNumber_not_in: [String!]
  gstNumber_lt: String
  gstNumber_lte: String
  gstNumber_gt: String
  gstNumber_gte: String
  gstNumber_contains: String
  gstNumber_not_contains: String
  gstNumber_starts_with: String
  gstNumber_not_starts_with: String
  gstNumber_ends_with: String
  gstNumber_not_ends_with: String
  panNumber: String
  panNumber_not: String
  panNumber_in: [String!]
  panNumber_not_in: [String!]
  panNumber_lt: String
  panNumber_lte: String
  panNumber_gt: String
  panNumber_gte: String
  panNumber_contains: String
  panNumber_not_contains: String
  panNumber_starts_with: String
  panNumber_not_starts_with: String
  panNumber_ends_with: String
  panNumber_not_ends_with: String
  cinNumber: String
  cinNumber_not: String
  cinNumber_in: [String!]
  cinNumber_not_in: [String!]
  cinNumber_lt: String
  cinNumber_lte: String
  cinNumber_gt: String
  cinNumber_gte: String
  cinNumber_contains: String
  cinNumber_not_contains: String
  cinNumber_starts_with: String
  cinNumber_not_starts_with: String
  cinNumber_ends_with: String
  cinNumber_not_ends_with: String
  ownerAadharCardNumber: String
  ownerAadharCardNumber_not: String
  ownerAadharCardNumber_in: [String!]
  ownerAadharCardNumber_not_in: [String!]
  ownerAadharCardNumber_lt: String
  ownerAadharCardNumber_lte: String
  ownerAadharCardNumber_gt: String
  ownerAadharCardNumber_gte: String
  ownerAadharCardNumber_contains: String
  ownerAadharCardNumber_not_contains: String
  ownerAadharCardNumber_starts_with: String
  ownerAadharCardNumber_not_starts_with: String
  ownerAadharCardNumber_ends_with: String
  ownerAadharCardNumber_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CompanyScalarWhereInput!]
  OR: [CompanyScalarWhereInput!]
  NOT: [CompanyScalarWhereInput!]
}

type CompanySubscriptionPayload {
  mutation: MutationType!
  node: Company
  updatedFields: [String!]
  previousValues: CompanyPreviousValues
}

input CompanySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CompanyWhereInput
  AND: [CompanySubscriptionWhereInput!]
  OR: [CompanySubscriptionWhereInput!]
  NOT: [CompanySubscriptionWhereInput!]
}

enum companyType {
  BASIC
  DISTRIBUTOR
  OEM
  DEALER
}

input CompanyUpdateDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateManyDataInput {
  name: String
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  logoBuffer: String
  type: companyType
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateManyInput {
  create: [CompanyCreateInput!]
  update: [CompanyUpdateWithWhereUniqueNestedInput!]
  upsert: [CompanyUpsertWithWhereUniqueNestedInput!]
  delete: [CompanyWhereUniqueInput!]
  connect: [CompanyWhereUniqueInput!]
  set: [CompanyWhereUniqueInput!]
  disconnect: [CompanyWhereUniqueInput!]
  deleteMany: [CompanyScalarWhereInput!]
  updateMany: [CompanyUpdateManyWithWhereNestedInput!]
}

input CompanyUpdateManyMutationInput {
  name: String
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  logoBuffer: String
  type: companyType
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateManyWithoutDealersInput {
  create: [CompanyCreateWithoutDealersInput!]
  delete: [CompanyWhereUniqueInput!]
  connect: [CompanyWhereUniqueInput!]
  set: [CompanyWhereUniqueInput!]
  disconnect: [CompanyWhereUniqueInput!]
  update: [CompanyUpdateWithWhereUniqueWithoutDealersInput!]
  upsert: [CompanyUpsertWithWhereUniqueWithoutDealersInput!]
  deleteMany: [CompanyScalarWhereInput!]
  updateMany: [CompanyUpdateManyWithWhereNestedInput!]
}

input CompanyUpdateManyWithoutDistributorsInput {
  create: [CompanyCreateWithoutDistributorsInput!]
  delete: [CompanyWhereUniqueInput!]
  connect: [CompanyWhereUniqueInput!]
  set: [CompanyWhereUniqueInput!]
  disconnect: [CompanyWhereUniqueInput!]
  update: [CompanyUpdateWithWhereUniqueWithoutDistributorsInput!]
  upsert: [CompanyUpsertWithWhereUniqueWithoutDistributorsInput!]
  deleteMany: [CompanyScalarWhereInput!]
  updateMany: [CompanyUpdateManyWithWhereNestedInput!]
}

input CompanyUpdateManyWithoutOemsInput {
  create: [CompanyCreateWithoutOemsInput!]
  delete: [CompanyWhereUniqueInput!]
  connect: [CompanyWhereUniqueInput!]
  set: [CompanyWhereUniqueInput!]
  disconnect: [CompanyWhereUniqueInput!]
  update: [CompanyUpdateWithWhereUniqueWithoutOemsInput!]
  upsert: [CompanyUpsertWithWhereUniqueWithoutOemsInput!]
  deleteMany: [CompanyScalarWhereInput!]
  updateMany: [CompanyUpdateManyWithWhereNestedInput!]
}

input CompanyUpdateManyWithoutSuppliersInput {
  create: [CompanyCreateWithoutSuppliersInput!]
  delete: [CompanyWhereUniqueInput!]
  connect: [CompanyWhereUniqueInput!]
  set: [CompanyWhereUniqueInput!]
  disconnect: [CompanyWhereUniqueInput!]
  update: [CompanyUpdateWithWhereUniqueWithoutSuppliersInput!]
  upsert: [CompanyUpsertWithWhereUniqueWithoutSuppliersInput!]
  deleteMany: [CompanyScalarWhereInput!]
  updateMany: [CompanyUpdateManyWithWhereNestedInput!]
}

input CompanyUpdateManyWithWhereNestedInput {
  where: CompanyScalarWhereInput!
  data: CompanyUpdateManyDataInput!
}

input CompanyUpdateOneInput {
  create: CompanyCreateInput
  update: CompanyUpdateDataInput
  upsert: CompanyUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateOneWithoutComponentsInput {
  create: CompanyCreateWithoutComponentsInput
  update: CompanyUpdateWithoutComponentsDataInput
  upsert: CompanyUpsertWithoutComponentsInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateOneWithoutInventoryInput {
  create: CompanyCreateWithoutInventoryInput
  update: CompanyUpdateWithoutInventoryDataInput
  upsert: CompanyUpsertWithoutInventoryInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateOneWithoutModelsInput {
  create: CompanyCreateWithoutModelsInput
  update: CompanyUpdateWithoutModelsDataInput
  upsert: CompanyUpsertWithoutModelsInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateOneWithoutTxInfoInput {
  create: CompanyCreateWithoutTxInfoInput
  update: CompanyUpdateWithoutTxInfoDataInput
  upsert: CompanyUpsertWithoutTxInfoInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateOneWithoutUsersInput {
  create: CompanyCreateWithoutUsersInput
  update: CompanyUpdateWithoutUsersDataInput
  upsert: CompanyUpsertWithoutUsersInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateOneWithoutVehiclesInput {
  create: CompanyCreateWithoutVehiclesInput
  update: CompanyUpdateWithoutVehiclesDataInput
  upsert: CompanyUpsertWithoutVehiclesInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateWithoutComponentsDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutDealersDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutDistributorsDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutInventoryDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutModelsDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutOemsDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutSuppliersDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutTxInfoDataInput {
  name: String
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutUsersDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  vehicles: VehicleUpdateManyWithoutCompanyInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithoutVehiclesDataInput {
  name: String
  txInfo: TxNodeUpdateOneWithoutCompanyInput
  code: String
  phone: String
  phone1: String
  phone2: String
  address: String
  companyLogo: FileUpdateOneInput
  users: UserUpdateManyWithoutCompanyInput
  logoBuffer: String
  models: ModelUpdateManyWithoutCompanyInput
  components: ProductUpdateManyWithoutCompanyInput
  inventory: ComponentUpdateManyWithoutOwnerInput
  type: companyType
  distributors: CompanyUpdateManyWithoutDistributorsInput
  dealers: CompanyUpdateManyWithoutDealersInput
  oems: CompanyUpdateManyWithoutOemsInput
  suppliers: CompanyUpdateManyWithoutSuppliersInput
  status: statusType
  gstNumber: String
  panNumber: String
  cinNumber: String
  ownerAadharCardNumber: String
  notes: String
}

input CompanyUpdateWithWhereUniqueNestedInput {
  where: CompanyWhereUniqueInput!
  data: CompanyUpdateDataInput!
}

input CompanyUpdateWithWhereUniqueWithoutDealersInput {
  where: CompanyWhereUniqueInput!
  data: CompanyUpdateWithoutDealersDataInput!
}

input CompanyUpdateWithWhereUniqueWithoutDistributorsInput {
  where: CompanyWhereUniqueInput!
  data: CompanyUpdateWithoutDistributorsDataInput!
}

input CompanyUpdateWithWhereUniqueWithoutOemsInput {
  where: CompanyWhereUniqueInput!
  data: CompanyUpdateWithoutOemsDataInput!
}

input CompanyUpdateWithWhereUniqueWithoutSuppliersInput {
  where: CompanyWhereUniqueInput!
  data: CompanyUpdateWithoutSuppliersDataInput!
}

input CompanyUpsertNestedInput {
  update: CompanyUpdateDataInput!
  create: CompanyCreateInput!
}

input CompanyUpsertWithoutComponentsInput {
  update: CompanyUpdateWithoutComponentsDataInput!
  create: CompanyCreateWithoutComponentsInput!
}

input CompanyUpsertWithoutInventoryInput {
  update: CompanyUpdateWithoutInventoryDataInput!
  create: CompanyCreateWithoutInventoryInput!
}

input CompanyUpsertWithoutModelsInput {
  update: CompanyUpdateWithoutModelsDataInput!
  create: CompanyCreateWithoutModelsInput!
}

input CompanyUpsertWithoutTxInfoInput {
  update: CompanyUpdateWithoutTxInfoDataInput!
  create: CompanyCreateWithoutTxInfoInput!
}

input CompanyUpsertWithoutUsersInput {
  update: CompanyUpdateWithoutUsersDataInput!
  create: CompanyCreateWithoutUsersInput!
}

input CompanyUpsertWithoutVehiclesInput {
  update: CompanyUpdateWithoutVehiclesDataInput!
  create: CompanyCreateWithoutVehiclesInput!
}

input CompanyUpsertWithWhereUniqueNestedInput {
  where: CompanyWhereUniqueInput!
  update: CompanyUpdateDataInput!
  create: CompanyCreateInput!
}

input CompanyUpsertWithWhereUniqueWithoutDealersInput {
  where: CompanyWhereUniqueInput!
  update: CompanyUpdateWithoutDealersDataInput!
  create: CompanyCreateWithoutDealersInput!
}

input CompanyUpsertWithWhereUniqueWithoutDistributorsInput {
  where: CompanyWhereUniqueInput!
  update: CompanyUpdateWithoutDistributorsDataInput!
  create: CompanyCreateWithoutDistributorsInput!
}

input CompanyUpsertWithWhereUniqueWithoutOemsInput {
  where: CompanyWhereUniqueInput!
  update: CompanyUpdateWithoutOemsDataInput!
  create: CompanyCreateWithoutOemsInput!
}

input CompanyUpsertWithWhereUniqueWithoutSuppliersInput {
  where: CompanyWhereUniqueInput!
  update: CompanyUpdateWithoutSuppliersDataInput!
  create: CompanyCreateWithoutSuppliersInput!
}

input CompanyWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  txInfo: TxNodeWhereInput
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone1: String
  phone1_not: String
  phone1_in: [String!]
  phone1_not_in: [String!]
  phone1_lt: String
  phone1_lte: String
  phone1_gt: String
  phone1_gte: String
  phone1_contains: String
  phone1_not_contains: String
  phone1_starts_with: String
  phone1_not_starts_with: String
  phone1_ends_with: String
  phone1_not_ends_with: String
  phone2: String
  phone2_not: String
  phone2_in: [String!]
  phone2_not_in: [String!]
  phone2_lt: String
  phone2_lte: String
  phone2_gt: String
  phone2_gte: String
  phone2_contains: String
  phone2_not_contains: String
  phone2_starts_with: String
  phone2_not_starts_with: String
  phone2_ends_with: String
  phone2_not_ends_with: String
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  companyLogo: FileWhereInput
  users_every: UserWhereInput
  users_some: UserWhereInput
  users_none: UserWhereInput
  logoBuffer: String
  logoBuffer_not: String
  logoBuffer_in: [String!]
  logoBuffer_not_in: [String!]
  logoBuffer_lt: String
  logoBuffer_lte: String
  logoBuffer_gt: String
  logoBuffer_gte: String
  logoBuffer_contains: String
  logoBuffer_not_contains: String
  logoBuffer_starts_with: String
  logoBuffer_not_starts_with: String
  logoBuffer_ends_with: String
  logoBuffer_not_ends_with: String
  models_every: ModelWhereInput
  models_some: ModelWhereInput
  models_none: ModelWhereInput
  components_every: ProductWhereInput
  components_some: ProductWhereInput
  components_none: ProductWhereInput
  inventory_every: ComponentWhereInput
  inventory_some: ComponentWhereInput
  inventory_none: ComponentWhereInput
  vehicles_every: VehicleWhereInput
  vehicles_some: VehicleWhereInput
  vehicles_none: VehicleWhereInput
  type: companyType
  type_not: companyType
  type_in: [companyType!]
  type_not_in: [companyType!]
  distributors_every: CompanyWhereInput
  distributors_some: CompanyWhereInput
  distributors_none: CompanyWhereInput
  dealers_every: CompanyWhereInput
  dealers_some: CompanyWhereInput
  dealers_none: CompanyWhereInput
  oems_every: CompanyWhereInput
  oems_some: CompanyWhereInput
  oems_none: CompanyWhereInput
  suppliers_every: CompanyWhereInput
  suppliers_some: CompanyWhereInput
  suppliers_none: CompanyWhereInput
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  gstNumber: String
  gstNumber_not: String
  gstNumber_in: [String!]
  gstNumber_not_in: [String!]
  gstNumber_lt: String
  gstNumber_lte: String
  gstNumber_gt: String
  gstNumber_gte: String
  gstNumber_contains: String
  gstNumber_not_contains: String
  gstNumber_starts_with: String
  gstNumber_not_starts_with: String
  gstNumber_ends_with: String
  gstNumber_not_ends_with: String
  panNumber: String
  panNumber_not: String
  panNumber_in: [String!]
  panNumber_not_in: [String!]
  panNumber_lt: String
  panNumber_lte: String
  panNumber_gt: String
  panNumber_gte: String
  panNumber_contains: String
  panNumber_not_contains: String
  panNumber_starts_with: String
  panNumber_not_starts_with: String
  panNumber_ends_with: String
  panNumber_not_ends_with: String
  cinNumber: String
  cinNumber_not: String
  cinNumber_in: [String!]
  cinNumber_not_in: [String!]
  cinNumber_lt: String
  cinNumber_lte: String
  cinNumber_gt: String
  cinNumber_gte: String
  cinNumber_contains: String
  cinNumber_not_contains: String
  cinNumber_starts_with: String
  cinNumber_not_starts_with: String
  cinNumber_ends_with: String
  cinNumber_not_ends_with: String
  ownerAadharCardNumber: String
  ownerAadharCardNumber_not: String
  ownerAadharCardNumber_in: [String!]
  ownerAadharCardNumber_not_in: [String!]
  ownerAadharCardNumber_lt: String
  ownerAadharCardNumber_lte: String
  ownerAadharCardNumber_gt: String
  ownerAadharCardNumber_gte: String
  ownerAadharCardNumber_contains: String
  ownerAadharCardNumber_not_contains: String
  ownerAadharCardNumber_starts_with: String
  ownerAadharCardNumber_not_starts_with: String
  ownerAadharCardNumber_ends_with: String
  ownerAadharCardNumber_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CompanyWhereInput!]
  OR: [CompanyWhereInput!]
  NOT: [CompanyWhereInput!]
}

input CompanyWhereUniqueInput {
  id: ID
  name: String
}

type Component {
  id: ID!
  UID: String
  txInfo: TxNode
  status: ComponentStatus
  prototype: Product
  specs(where: ProductSpecWhereInput, orderBy: ProductSpecOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpec!]
  owner: Company
  vehicle: Vehicle
  warranty: Warranty
  notes: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ComponentConnection {
  pageInfo: PageInfo!
  edges: [ComponentEdge]!
  aggregate: AggregateComponent!
}

input ComponentCreateInput {
  UID: String
  txInfo: TxNodeCreateOneWithoutComponentInput
  status: ComponentStatus
  prototype: ProductCreateOneWithoutInventoryInput
  specs: ProductSpecCreateManyInput
  owner: CompanyCreateOneWithoutInventoryInput
  vehicle: VehicleCreateOneWithoutComponentsInput
  warranty: WarrantyCreateOneInput
  notes: String
}

input ComponentCreateManyWithoutOwnerInput {
  create: [ComponentCreateWithoutOwnerInput!]
  connect: [ComponentWhereUniqueInput!]
}

input ComponentCreateManyWithoutPrototypeInput {
  create: [ComponentCreateWithoutPrototypeInput!]
  connect: [ComponentWhereUniqueInput!]
}

input ComponentCreateManyWithoutVehicleInput {
  create: [ComponentCreateWithoutVehicleInput!]
  connect: [ComponentWhereUniqueInput!]
}

input ComponentCreateOneWithoutTxInfoInput {
  create: ComponentCreateWithoutTxInfoInput
  connect: ComponentWhereUniqueInput
}

input ComponentCreateWithoutOwnerInput {
  UID: String
  txInfo: TxNodeCreateOneWithoutComponentInput
  status: ComponentStatus
  prototype: ProductCreateOneWithoutInventoryInput
  specs: ProductSpecCreateManyInput
  vehicle: VehicleCreateOneWithoutComponentsInput
  warranty: WarrantyCreateOneInput
  notes: String
}

input ComponentCreateWithoutPrototypeInput {
  UID: String
  txInfo: TxNodeCreateOneWithoutComponentInput
  status: ComponentStatus
  specs: ProductSpecCreateManyInput
  owner: CompanyCreateOneWithoutInventoryInput
  vehicle: VehicleCreateOneWithoutComponentsInput
  warranty: WarrantyCreateOneInput
  notes: String
}

input ComponentCreateWithoutTxInfoInput {
  UID: String
  status: ComponentStatus
  prototype: ProductCreateOneWithoutInventoryInput
  specs: ProductSpecCreateManyInput
  owner: CompanyCreateOneWithoutInventoryInput
  vehicle: VehicleCreateOneWithoutComponentsInput
  warranty: WarrantyCreateOneInput
  notes: String
}

input ComponentCreateWithoutVehicleInput {
  UID: String
  txInfo: TxNodeCreateOneWithoutComponentInput
  status: ComponentStatus
  prototype: ProductCreateOneWithoutInventoryInput
  specs: ProductSpecCreateManyInput
  owner: CompanyCreateOneWithoutInventoryInput
  warranty: WarrantyCreateOneInput
  notes: String
}

type ComponentEdge {
  node: Component!
  cursor: String!
}

enum ComponentOrderByInput {
  id_ASC
  id_DESC
  UID_ASC
  UID_DESC
  status_ASC
  status_DESC
  notes_ASC
  notes_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ComponentPreviousValues {
  id: ID!
  UID: String
  status: ComponentStatus
  notes: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ComponentScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  UID: String
  UID_not: String
  UID_in: [String!]
  UID_not_in: [String!]
  UID_lt: String
  UID_lte: String
  UID_gt: String
  UID_gte: String
  UID_contains: String
  UID_not_contains: String
  UID_starts_with: String
  UID_not_starts_with: String
  UID_ends_with: String
  UID_not_ends_with: String
  status: ComponentStatus
  status_not: ComponentStatus
  status_in: [ComponentStatus!]
  status_not_in: [ComponentStatus!]
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ComponentScalarWhereInput!]
  OR: [ComponentScalarWhereInput!]
  NOT: [ComponentScalarWhereInput!]
}

enum ComponentStatus {
  REQUESTED
  INSTOCK
  INUSE
  UNHEALTHY
  DISCARDED
  DELETED
}

type ComponentSubscriptionPayload {
  mutation: MutationType!
  node: Component
  updatedFields: [String!]
  previousValues: ComponentPreviousValues
}

input ComponentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ComponentWhereInput
  AND: [ComponentSubscriptionWhereInput!]
  OR: [ComponentSubscriptionWhereInput!]
  NOT: [ComponentSubscriptionWhereInput!]
}

input ComponentUpdateInput {
  UID: String
  txInfo: TxNodeUpdateOneWithoutComponentInput
  status: ComponentStatus
  prototype: ProductUpdateOneWithoutInventoryInput
  specs: ProductSpecUpdateManyInput
  owner: CompanyUpdateOneWithoutInventoryInput
  vehicle: VehicleUpdateOneWithoutComponentsInput
  warranty: WarrantyUpdateOneInput
  notes: String
}

input ComponentUpdateManyDataInput {
  UID: String
  status: ComponentStatus
  notes: String
}

input ComponentUpdateManyMutationInput {
  UID: String
  status: ComponentStatus
  notes: String
}

input ComponentUpdateManyWithoutOwnerInput {
  create: [ComponentCreateWithoutOwnerInput!]
  delete: [ComponentWhereUniqueInput!]
  connect: [ComponentWhereUniqueInput!]
  set: [ComponentWhereUniqueInput!]
  disconnect: [ComponentWhereUniqueInput!]
  update: [ComponentUpdateWithWhereUniqueWithoutOwnerInput!]
  upsert: [ComponentUpsertWithWhereUniqueWithoutOwnerInput!]
  deleteMany: [ComponentScalarWhereInput!]
  updateMany: [ComponentUpdateManyWithWhereNestedInput!]
}

input ComponentUpdateManyWithoutPrototypeInput {
  create: [ComponentCreateWithoutPrototypeInput!]
  delete: [ComponentWhereUniqueInput!]
  connect: [ComponentWhereUniqueInput!]
  set: [ComponentWhereUniqueInput!]
  disconnect: [ComponentWhereUniqueInput!]
  update: [ComponentUpdateWithWhereUniqueWithoutPrototypeInput!]
  upsert: [ComponentUpsertWithWhereUniqueWithoutPrototypeInput!]
  deleteMany: [ComponentScalarWhereInput!]
  updateMany: [ComponentUpdateManyWithWhereNestedInput!]
}

input ComponentUpdateManyWithoutVehicleInput {
  create: [ComponentCreateWithoutVehicleInput!]
  delete: [ComponentWhereUniqueInput!]
  connect: [ComponentWhereUniqueInput!]
  set: [ComponentWhereUniqueInput!]
  disconnect: [ComponentWhereUniqueInput!]
  update: [ComponentUpdateWithWhereUniqueWithoutVehicleInput!]
  upsert: [ComponentUpsertWithWhereUniqueWithoutVehicleInput!]
  deleteMany: [ComponentScalarWhereInput!]
  updateMany: [ComponentUpdateManyWithWhereNestedInput!]
}

input ComponentUpdateManyWithWhereNestedInput {
  where: ComponentScalarWhereInput!
  data: ComponentUpdateManyDataInput!
}

input ComponentUpdateOneWithoutTxInfoInput {
  create: ComponentCreateWithoutTxInfoInput
  update: ComponentUpdateWithoutTxInfoDataInput
  upsert: ComponentUpsertWithoutTxInfoInput
  delete: Boolean
  disconnect: Boolean
  connect: ComponentWhereUniqueInput
}

input ComponentUpdateWithoutOwnerDataInput {
  UID: String
  txInfo: TxNodeUpdateOneWithoutComponentInput
  status: ComponentStatus
  prototype: ProductUpdateOneWithoutInventoryInput
  specs: ProductSpecUpdateManyInput
  vehicle: VehicleUpdateOneWithoutComponentsInput
  warranty: WarrantyUpdateOneInput
  notes: String
}

input ComponentUpdateWithoutPrototypeDataInput {
  UID: String
  txInfo: TxNodeUpdateOneWithoutComponentInput
  status: ComponentStatus
  specs: ProductSpecUpdateManyInput
  owner: CompanyUpdateOneWithoutInventoryInput
  vehicle: VehicleUpdateOneWithoutComponentsInput
  warranty: WarrantyUpdateOneInput
  notes: String
}

input ComponentUpdateWithoutTxInfoDataInput {
  UID: String
  status: ComponentStatus
  prototype: ProductUpdateOneWithoutInventoryInput
  specs: ProductSpecUpdateManyInput
  owner: CompanyUpdateOneWithoutInventoryInput
  vehicle: VehicleUpdateOneWithoutComponentsInput
  warranty: WarrantyUpdateOneInput
  notes: String
}

input ComponentUpdateWithoutVehicleDataInput {
  UID: String
  txInfo: TxNodeUpdateOneWithoutComponentInput
  status: ComponentStatus
  prototype: ProductUpdateOneWithoutInventoryInput
  specs: ProductSpecUpdateManyInput
  owner: CompanyUpdateOneWithoutInventoryInput
  warranty: WarrantyUpdateOneInput
  notes: String
}

input ComponentUpdateWithWhereUniqueWithoutOwnerInput {
  where: ComponentWhereUniqueInput!
  data: ComponentUpdateWithoutOwnerDataInput!
}

input ComponentUpdateWithWhereUniqueWithoutPrototypeInput {
  where: ComponentWhereUniqueInput!
  data: ComponentUpdateWithoutPrototypeDataInput!
}

input ComponentUpdateWithWhereUniqueWithoutVehicleInput {
  where: ComponentWhereUniqueInput!
  data: ComponentUpdateWithoutVehicleDataInput!
}

input ComponentUpsertWithoutTxInfoInput {
  update: ComponentUpdateWithoutTxInfoDataInput!
  create: ComponentCreateWithoutTxInfoInput!
}

input ComponentUpsertWithWhereUniqueWithoutOwnerInput {
  where: ComponentWhereUniqueInput!
  update: ComponentUpdateWithoutOwnerDataInput!
  create: ComponentCreateWithoutOwnerInput!
}

input ComponentUpsertWithWhereUniqueWithoutPrototypeInput {
  where: ComponentWhereUniqueInput!
  update: ComponentUpdateWithoutPrototypeDataInput!
  create: ComponentCreateWithoutPrototypeInput!
}

input ComponentUpsertWithWhereUniqueWithoutVehicleInput {
  where: ComponentWhereUniqueInput!
  update: ComponentUpdateWithoutVehicleDataInput!
  create: ComponentCreateWithoutVehicleInput!
}

input ComponentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  UID: String
  UID_not: String
  UID_in: [String!]
  UID_not_in: [String!]
  UID_lt: String
  UID_lte: String
  UID_gt: String
  UID_gte: String
  UID_contains: String
  UID_not_contains: String
  UID_starts_with: String
  UID_not_starts_with: String
  UID_ends_with: String
  UID_not_ends_with: String
  txInfo: TxNodeWhereInput
  status: ComponentStatus
  status_not: ComponentStatus
  status_in: [ComponentStatus!]
  status_not_in: [ComponentStatus!]
  prototype: ProductWhereInput
  specs_every: ProductSpecWhereInput
  specs_some: ProductSpecWhereInput
  specs_none: ProductSpecWhereInput
  owner: CompanyWhereInput
  vehicle: VehicleWhereInput
  warranty: WarrantyWhereInput
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ComponentWhereInput!]
  OR: [ComponentWhereInput!]
  NOT: [ComponentWhereInput!]
}

input ComponentWhereUniqueInput {
  id: ID
  UID: String
}

scalar DateTime

type Device {
  id: ID!
  name: String
  deviceId: String!
  macId: String!
  key: String!
  pin: String
  status: DeviceStatus!
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  vehicle: Vehicle
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DeviceConnection {
  pageInfo: PageInfo!
  edges: [DeviceEdge]!
  aggregate: AggregateDevice!
}

input DeviceCreateInput {
  name: String
  deviceId: String!
  macId: String!
  key: String!
  pin: String
  status: DeviceStatus
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  vehicle: VehicleCreateOneWithoutDeviceInput
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
}

input DeviceCreateManyInput {
  create: [DeviceCreateInput!]
  connect: [DeviceWhereUniqueInput!]
}

input DeviceCreateOneWithoutVehicleInput {
  create: DeviceCreateWithoutVehicleInput
  connect: DeviceWhereUniqueInput
}

input DeviceCreateWithoutVehicleInput {
  name: String
  deviceId: String!
  macId: String!
  key: String!
  pin: String
  status: DeviceStatus
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
}

type DeviceEdge {
  node: Device!
  cursor: String!
}

enum DeviceOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  deviceId_ASC
  deviceId_DESC
  macId_ASC
  macId_DESC
  key_ASC
  key_DESC
  pin_ASC
  pin_DESC
  status_ASC
  status_DESC
  updateStatus_ASC
  updateStatus_DESC
  type_ASC
  type_DESC
  firmware_ASC
  firmware_DESC
  expectedFirmware_ASC
  expectedFirmware_DESC
  pinResetRequired_ASC
  pinResetRequired_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DevicePreviousValues {
  id: ID!
  name: String
  deviceId: String!
  macId: String!
  key: String!
  pin: String
  status: DeviceStatus!
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input DeviceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  deviceId: String
  deviceId_not: String
  deviceId_in: [String!]
  deviceId_not_in: [String!]
  deviceId_lt: String
  deviceId_lte: String
  deviceId_gt: String
  deviceId_gte: String
  deviceId_contains: String
  deviceId_not_contains: String
  deviceId_starts_with: String
  deviceId_not_starts_with: String
  deviceId_ends_with: String
  deviceId_not_ends_with: String
  macId: String
  macId_not: String
  macId_in: [String!]
  macId_not_in: [String!]
  macId_lt: String
  macId_lte: String
  macId_gt: String
  macId_gte: String
  macId_contains: String
  macId_not_contains: String
  macId_starts_with: String
  macId_not_starts_with: String
  macId_ends_with: String
  macId_not_ends_with: String
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  pin: String
  pin_not: String
  pin_in: [String!]
  pin_not_in: [String!]
  pin_lt: String
  pin_lte: String
  pin_gt: String
  pin_gte: String
  pin_contains: String
  pin_not_contains: String
  pin_starts_with: String
  pin_not_starts_with: String
  pin_ends_with: String
  pin_not_ends_with: String
  status: DeviceStatus
  status_not: DeviceStatus
  status_in: [DeviceStatus!]
  status_not_in: [DeviceStatus!]
  updateStatus: DeviceUpdateStatus
  updateStatus_not: DeviceUpdateStatus
  updateStatus_in: [DeviceUpdateStatus!]
  updateStatus_not_in: [DeviceUpdateStatus!]
  type: DeviceType
  type_not: DeviceType
  type_in: [DeviceType!]
  type_not_in: [DeviceType!]
  firmware: String
  firmware_not: String
  firmware_in: [String!]
  firmware_not_in: [String!]
  firmware_lt: String
  firmware_lte: String
  firmware_gt: String
  firmware_gte: String
  firmware_contains: String
  firmware_not_contains: String
  firmware_starts_with: String
  firmware_not_starts_with: String
  firmware_ends_with: String
  firmware_not_ends_with: String
  expectedFirmware: String
  expectedFirmware_not: String
  expectedFirmware_in: [String!]
  expectedFirmware_not_in: [String!]
  expectedFirmware_lt: String
  expectedFirmware_lte: String
  expectedFirmware_gt: String
  expectedFirmware_gte: String
  expectedFirmware_contains: String
  expectedFirmware_not_contains: String
  expectedFirmware_starts_with: String
  expectedFirmware_not_starts_with: String
  expectedFirmware_ends_with: String
  expectedFirmware_not_ends_with: String
  pinResetRequired: Boolean
  pinResetRequired_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [DeviceScalarWhereInput!]
  OR: [DeviceScalarWhereInput!]
  NOT: [DeviceScalarWhereInput!]
}

enum DeviceStatus {
  INITIALIZED
  ACTIVATED
  DISABLED
  DELETED
  RESET
}

type DeviceSubscriptionPayload {
  mutation: MutationType!
  node: Device
  updatedFields: [String!]
  previousValues: DevicePreviousValues
}

input DeviceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DeviceWhereInput
  AND: [DeviceSubscriptionWhereInput!]
  OR: [DeviceSubscriptionWhereInput!]
  NOT: [DeviceSubscriptionWhereInput!]
}

enum DeviceType {
  CONTROLLER
  POINTER
}

input DeviceUpdateDataInput {
  name: String
  deviceId: String
  macId: String
  key: String
  pin: String
  status: DeviceStatus
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  vehicle: VehicleUpdateOneWithoutDeviceInput
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
}

input DeviceUpdateInput {
  name: String
  deviceId: String
  macId: String
  key: String
  pin: String
  status: DeviceStatus
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  vehicle: VehicleUpdateOneWithoutDeviceInput
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
}

input DeviceUpdateManyDataInput {
  name: String
  deviceId: String
  macId: String
  key: String
  pin: String
  status: DeviceStatus
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
}

input DeviceUpdateManyInput {
  create: [DeviceCreateInput!]
  update: [DeviceUpdateWithWhereUniqueNestedInput!]
  upsert: [DeviceUpsertWithWhereUniqueNestedInput!]
  delete: [DeviceWhereUniqueInput!]
  connect: [DeviceWhereUniqueInput!]
  set: [DeviceWhereUniqueInput!]
  disconnect: [DeviceWhereUniqueInput!]
  deleteMany: [DeviceScalarWhereInput!]
  updateMany: [DeviceUpdateManyWithWhereNestedInput!]
}

input DeviceUpdateManyMutationInput {
  name: String
  deviceId: String
  macId: String
  key: String
  pin: String
  status: DeviceStatus
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
}

input DeviceUpdateManyWithWhereNestedInput {
  where: DeviceScalarWhereInput!
  data: DeviceUpdateManyDataInput!
}

input DeviceUpdateOneWithoutVehicleInput {
  create: DeviceCreateWithoutVehicleInput
  update: DeviceUpdateWithoutVehicleDataInput
  upsert: DeviceUpsertWithoutVehicleInput
  delete: Boolean
  disconnect: Boolean
  connect: DeviceWhereUniqueInput
}

enum DeviceUpdateStatus {
  UPDATED
  UPDATING
  ERROR
  UPDATE_REQUIRED
}

input DeviceUpdateWithoutVehicleDataInput {
  name: String
  deviceId: String
  macId: String
  key: String
  pin: String
  status: DeviceStatus
  updateStatus: DeviceUpdateStatus
  type: DeviceType
  firmware: String
  expectedFirmware: String
  pinResetRequired: Boolean
}

input DeviceUpdateWithWhereUniqueNestedInput {
  where: DeviceWhereUniqueInput!
  data: DeviceUpdateDataInput!
}

input DeviceUpsertWithoutVehicleInput {
  update: DeviceUpdateWithoutVehicleDataInput!
  create: DeviceCreateWithoutVehicleInput!
}

input DeviceUpsertWithWhereUniqueNestedInput {
  where: DeviceWhereUniqueInput!
  update: DeviceUpdateDataInput!
  create: DeviceCreateInput!
}

input DeviceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  deviceId: String
  deviceId_not: String
  deviceId_in: [String!]
  deviceId_not_in: [String!]
  deviceId_lt: String
  deviceId_lte: String
  deviceId_gt: String
  deviceId_gte: String
  deviceId_contains: String
  deviceId_not_contains: String
  deviceId_starts_with: String
  deviceId_not_starts_with: String
  deviceId_ends_with: String
  deviceId_not_ends_with: String
  macId: String
  macId_not: String
  macId_in: [String!]
  macId_not_in: [String!]
  macId_lt: String
  macId_lte: String
  macId_gt: String
  macId_gte: String
  macId_contains: String
  macId_not_contains: String
  macId_starts_with: String
  macId_not_starts_with: String
  macId_ends_with: String
  macId_not_ends_with: String
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  pin: String
  pin_not: String
  pin_in: [String!]
  pin_not_in: [String!]
  pin_lt: String
  pin_lte: String
  pin_gt: String
  pin_gte: String
  pin_contains: String
  pin_not_contains: String
  pin_starts_with: String
  pin_not_starts_with: String
  pin_ends_with: String
  pin_not_ends_with: String
  status: DeviceStatus
  status_not: DeviceStatus
  status_in: [DeviceStatus!]
  status_not_in: [DeviceStatus!]
  updateStatus: DeviceUpdateStatus
  updateStatus_not: DeviceUpdateStatus
  updateStatus_in: [DeviceUpdateStatus!]
  updateStatus_not_in: [DeviceUpdateStatus!]
  type: DeviceType
  type_not: DeviceType
  type_in: [DeviceType!]
  type_not_in: [DeviceType!]
  vehicle: VehicleWhereInput
  firmware: String
  firmware_not: String
  firmware_in: [String!]
  firmware_not_in: [String!]
  firmware_lt: String
  firmware_lte: String
  firmware_gt: String
  firmware_gte: String
  firmware_contains: String
  firmware_not_contains: String
  firmware_starts_with: String
  firmware_not_starts_with: String
  firmware_ends_with: String
  firmware_not_ends_with: String
  expectedFirmware: String
  expectedFirmware_not: String
  expectedFirmware_in: [String!]
  expectedFirmware_not_in: [String!]
  expectedFirmware_lt: String
  expectedFirmware_lte: String
  expectedFirmware_gt: String
  expectedFirmware_gte: String
  expectedFirmware_contains: String
  expectedFirmware_not_contains: String
  expectedFirmware_starts_with: String
  expectedFirmware_not_starts_with: String
  expectedFirmware_ends_with: String
  expectedFirmware_not_ends_with: String
  pinResetRequired: Boolean
  pinResetRequired_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [DeviceWhereInput!]
  OR: [DeviceWhereInput!]
  NOT: [DeviceWhereInput!]
}

input DeviceWhereUniqueInput {
  id: ID
  deviceId: String
}

type File {
  id: ID!
  associatedId: String
  name: String!
  tag: String
  type: FileType
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type FileConnection {
  pageInfo: PageInfo!
  edges: [FileEdge]!
  aggregate: AggregateFile!
}

input FileCreateInput {
  associatedId: String
  name: String!
  tag: String
  type: FileType
  user: UserCreateOneInput!
}

input FileCreateManyInput {
  create: [FileCreateInput!]
  connect: [FileWhereUniqueInput!]
}

input FileCreateOneInput {
  create: FileCreateInput
  connect: FileWhereUniqueInput
}

type FileEdge {
  node: File!
  cursor: String!
}

enum FileOrderByInput {
  id_ASC
  id_DESC
  associatedId_ASC
  associatedId_DESC
  name_ASC
  name_DESC
  tag_ASC
  tag_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type FilePreviousValues {
  id: ID!
  associatedId: String
  name: String!
  tag: String
  type: FileType
  createdAt: DateTime!
  updatedAt: DateTime!
}

input FileScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  associatedId: String
  associatedId_not: String
  associatedId_in: [String!]
  associatedId_not_in: [String!]
  associatedId_lt: String
  associatedId_lte: String
  associatedId_gt: String
  associatedId_gte: String
  associatedId_contains: String
  associatedId_not_contains: String
  associatedId_starts_with: String
  associatedId_not_starts_with: String
  associatedId_ends_with: String
  associatedId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  type: FileType
  type_not: FileType
  type_in: [FileType!]
  type_not_in: [FileType!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FileScalarWhereInput!]
  OR: [FileScalarWhereInput!]
  NOT: [FileScalarWhereInput!]
}

type FileSubscriptionPayload {
  mutation: MutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

input FileSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FileWhereInput
  AND: [FileSubscriptionWhereInput!]
  OR: [FileSubscriptionWhereInput!]
  NOT: [FileSubscriptionWhereInput!]
}

enum FileType {
  COMPANY_LOGO
  DL_SIDE_1
  DL_SIDE_2
  PRODUCT_IMAGE
  PROFILE
  KYC_DL_SIDE_1
  KYC_DL_SIDE_2
  KYC_PROFILE
  OTHERS
  VEHICLE_REPORTS
  VEHICLE_MODEL_IMG
  VEHICLE_ADDRESS_PROOF
  VEHICLE_ID_PROOF
  SERVICE_TICKET_IMG
}

input FileUpdateDataInput {
  associatedId: String
  name: String
  tag: String
  type: FileType
  user: UserUpdateOneRequiredInput
}

input FileUpdateInput {
  associatedId: String
  name: String
  tag: String
  type: FileType
  user: UserUpdateOneRequiredInput
}

input FileUpdateManyDataInput {
  associatedId: String
  name: String
  tag: String
  type: FileType
}

input FileUpdateManyInput {
  create: [FileCreateInput!]
  update: [FileUpdateWithWhereUniqueNestedInput!]
  upsert: [FileUpsertWithWhereUniqueNestedInput!]
  delete: [FileWhereUniqueInput!]
  connect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  disconnect: [FileWhereUniqueInput!]
  deleteMany: [FileScalarWhereInput!]
  updateMany: [FileUpdateManyWithWhereNestedInput!]
}

input FileUpdateManyMutationInput {
  associatedId: String
  name: String
  tag: String
  type: FileType
}

input FileUpdateManyWithWhereNestedInput {
  where: FileScalarWhereInput!
  data: FileUpdateManyDataInput!
}

input FileUpdateOneInput {
  create: FileCreateInput
  update: FileUpdateDataInput
  upsert: FileUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateWithWhereUniqueNestedInput {
  where: FileWhereUniqueInput!
  data: FileUpdateDataInput!
}

input FileUpsertNestedInput {
  update: FileUpdateDataInput!
  create: FileCreateInput!
}

input FileUpsertWithWhereUniqueNestedInput {
  where: FileWhereUniqueInput!
  update: FileUpdateDataInput!
  create: FileCreateInput!
}

input FileWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  associatedId: String
  associatedId_not: String
  associatedId_in: [String!]
  associatedId_not_in: [String!]
  associatedId_lt: String
  associatedId_lte: String
  associatedId_gt: String
  associatedId_gte: String
  associatedId_contains: String
  associatedId_not_contains: String
  associatedId_starts_with: String
  associatedId_not_starts_with: String
  associatedId_ends_with: String
  associatedId_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  tag: String
  tag_not: String
  tag_in: [String!]
  tag_not_in: [String!]
  tag_lt: String
  tag_lte: String
  tag_gt: String
  tag_gte: String
  tag_contains: String
  tag_not_contains: String
  tag_starts_with: String
  tag_not_starts_with: String
  tag_ends_with: String
  tag_not_ends_with: String
  type: FileType
  type_not: FileType
  type_in: [FileType!]
  type_not_in: [FileType!]
  user: UserWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FileWhereInput!]
  OR: [FileWhereInput!]
  NOT: [FileWhereInput!]
}

input FileWhereUniqueInput {
  id: ID
  name: String
}

type FirebaseProfile {
  id: ID!
  uid: String
  displayName: String
}

type FirebaseProfileConnection {
  pageInfo: PageInfo!
  edges: [FirebaseProfileEdge]!
  aggregate: AggregateFirebaseProfile!
}

input FirebaseProfileCreateInput {
  uid: String
  displayName: String
}

input FirebaseProfileCreateOneInput {
  create: FirebaseProfileCreateInput
  connect: FirebaseProfileWhereUniqueInput
}

type FirebaseProfileEdge {
  node: FirebaseProfile!
  cursor: String!
}

enum FirebaseProfileOrderByInput {
  id_ASC
  id_DESC
  uid_ASC
  uid_DESC
  displayName_ASC
  displayName_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type FirebaseProfilePreviousValues {
  id: ID!
  uid: String
  displayName: String
}

type FirebaseProfileSubscriptionPayload {
  mutation: MutationType!
  node: FirebaseProfile
  updatedFields: [String!]
  previousValues: FirebaseProfilePreviousValues
}

input FirebaseProfileSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FirebaseProfileWhereInput
  AND: [FirebaseProfileSubscriptionWhereInput!]
  OR: [FirebaseProfileSubscriptionWhereInput!]
  NOT: [FirebaseProfileSubscriptionWhereInput!]
}

input FirebaseProfileUpdateDataInput {
  uid: String
  displayName: String
}

input FirebaseProfileUpdateInput {
  uid: String
  displayName: String
}

input FirebaseProfileUpdateManyMutationInput {
  uid: String
  displayName: String
}

input FirebaseProfileUpdateOneInput {
  create: FirebaseProfileCreateInput
  update: FirebaseProfileUpdateDataInput
  upsert: FirebaseProfileUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: FirebaseProfileWhereUniqueInput
}

input FirebaseProfileUpsertNestedInput {
  update: FirebaseProfileUpdateDataInput!
  create: FirebaseProfileCreateInput!
}

input FirebaseProfileWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  uid: String
  uid_not: String
  uid_in: [String!]
  uid_not_in: [String!]
  uid_lt: String
  uid_lte: String
  uid_gt: String
  uid_gte: String
  uid_contains: String
  uid_not_contains: String
  uid_starts_with: String
  uid_not_starts_with: String
  uid_ends_with: String
  uid_not_ends_with: String
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  AND: [FirebaseProfileWhereInput!]
  OR: [FirebaseProfileWhereInput!]
  NOT: [FirebaseProfileWhereInput!]
}

input FirebaseProfileWhereUniqueInput {
  id: ID
  uid: String
}

enum genderType {
  MALE
  FEMALE
  OTHERS
}

type Invoice {
  id: ID!
  number: String
  date: DateTime
  amount: Float
  createdAt: DateTime!
  updatedAt: DateTime!
}

type InvoiceConnection {
  pageInfo: PageInfo!
  edges: [InvoiceEdge]!
  aggregate: AggregateInvoice!
}

input InvoiceCreateInput {
  number: String
  date: DateTime
  amount: Float
}

input InvoiceCreateOneInput {
  create: InvoiceCreateInput
  connect: InvoiceWhereUniqueInput
}

type InvoiceEdge {
  node: Invoice!
  cursor: String!
}

enum InvoiceOrderByInput {
  id_ASC
  id_DESC
  number_ASC
  number_DESC
  date_ASC
  date_DESC
  amount_ASC
  amount_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type InvoicePreviousValues {
  id: ID!
  number: String
  date: DateTime
  amount: Float
  createdAt: DateTime!
  updatedAt: DateTime!
}

type InvoiceSubscriptionPayload {
  mutation: MutationType!
  node: Invoice
  updatedFields: [String!]
  previousValues: InvoicePreviousValues
}

input InvoiceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InvoiceWhereInput
  AND: [InvoiceSubscriptionWhereInput!]
  OR: [InvoiceSubscriptionWhereInput!]
  NOT: [InvoiceSubscriptionWhereInput!]
}

input InvoiceUpdateDataInput {
  number: String
  date: DateTime
  amount: Float
}

input InvoiceUpdateInput {
  number: String
  date: DateTime
  amount: Float
}

input InvoiceUpdateManyMutationInput {
  number: String
  date: DateTime
  amount: Float
}

input InvoiceUpdateOneInput {
  create: InvoiceCreateInput
  update: InvoiceUpdateDataInput
  upsert: InvoiceUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: InvoiceWhereUniqueInput
}

input InvoiceUpsertNestedInput {
  update: InvoiceUpdateDataInput!
  create: InvoiceCreateInput!
}

input InvoiceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  number: String
  number_not: String
  number_in: [String!]
  number_not_in: [String!]
  number_lt: String
  number_lte: String
  number_gt: String
  number_gte: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [InvoiceWhereInput!]
  OR: [InvoiceWhereInput!]
  NOT: [InvoiceWhereInput!]
}

input InvoiceWhereUniqueInput {
  id: ID
}

scalar Long

type Model {
  id: ID!
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType!
  company: Company
  imageFile: File
  image: String
  components(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product!]
  specs(where: ProductSpecWhereInput, orderBy: ProductSpecOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpec!]
  config: ModelConfig
  vehicles(where: VehicleWhereInput, orderBy: VehicleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vehicle!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ModelAccessType {
  KEY
  KEYLESS
  HYBRID
}

type ModelConfig {
  id: ID!
  speedDivisor: Float
  odoDivisor: Float
  accessType: ModelAccessType
  wheelDiameter: Float
  maxSpeed: Float
  model: Model
  hillAssistStatus: Boolean
  parkingStatus: Boolean
  regenBrakingStatus: Boolean
  speedLimit: Float
  pickupControlLimit: Float
  brakeRegenLimit: Float
  zeroThrottleRegenLimit: Float
  currentLimit: Float
  eabsStatus: Boolean
  overVoltageLimit: Float
  underVoltageLimit: Float
  batteryMinVoltage: Float
  batteryMaxVoltage: Float
}

type ModelConfigConnection {
  pageInfo: PageInfo!
  edges: [ModelConfigEdge]!
  aggregate: AggregateModelConfig!
}

input ModelConfigCreateInput {
  speedDivisor: Float
  odoDivisor: Float
  accessType: ModelAccessType
  wheelDiameter: Float
  maxSpeed: Float
  model: ModelCreateOneWithoutConfigInput
  hillAssistStatus: Boolean
  parkingStatus: Boolean
  regenBrakingStatus: Boolean
  speedLimit: Float
  pickupControlLimit: Float
  brakeRegenLimit: Float
  zeroThrottleRegenLimit: Float
  currentLimit: Float
  eabsStatus: Boolean
  overVoltageLimit: Float
  underVoltageLimit: Float
  batteryMinVoltage: Float
  batteryMaxVoltage: Float
}

input ModelConfigCreateOneWithoutModelInput {
  create: ModelConfigCreateWithoutModelInput
  connect: ModelConfigWhereUniqueInput
}

input ModelConfigCreateWithoutModelInput {
  speedDivisor: Float
  odoDivisor: Float
  accessType: ModelAccessType
  wheelDiameter: Float
  maxSpeed: Float
  hillAssistStatus: Boolean
  parkingStatus: Boolean
  regenBrakingStatus: Boolean
  speedLimit: Float
  pickupControlLimit: Float
  brakeRegenLimit: Float
  zeroThrottleRegenLimit: Float
  currentLimit: Float
  eabsStatus: Boolean
  overVoltageLimit: Float
  underVoltageLimit: Float
  batteryMinVoltage: Float
  batteryMaxVoltage: Float
}

type ModelConfigEdge {
  node: ModelConfig!
  cursor: String!
}

enum ModelConfigOrderByInput {
  id_ASC
  id_DESC
  speedDivisor_ASC
  speedDivisor_DESC
  odoDivisor_ASC
  odoDivisor_DESC
  accessType_ASC
  accessType_DESC
  wheelDiameter_ASC
  wheelDiameter_DESC
  maxSpeed_ASC
  maxSpeed_DESC
  hillAssistStatus_ASC
  hillAssistStatus_DESC
  parkingStatus_ASC
  parkingStatus_DESC
  regenBrakingStatus_ASC
  regenBrakingStatus_DESC
  speedLimit_ASC
  speedLimit_DESC
  pickupControlLimit_ASC
  pickupControlLimit_DESC
  brakeRegenLimit_ASC
  brakeRegenLimit_DESC
  zeroThrottleRegenLimit_ASC
  zeroThrottleRegenLimit_DESC
  currentLimit_ASC
  currentLimit_DESC
  eabsStatus_ASC
  eabsStatus_DESC
  overVoltageLimit_ASC
  overVoltageLimit_DESC
  underVoltageLimit_ASC
  underVoltageLimit_DESC
  batteryMinVoltage_ASC
  batteryMinVoltage_DESC
  batteryMaxVoltage_ASC
  batteryMaxVoltage_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ModelConfigPreviousValues {
  id: ID!
  speedDivisor: Float
  odoDivisor: Float
  accessType: ModelAccessType
  wheelDiameter: Float
  maxSpeed: Float
  hillAssistStatus: Boolean
  parkingStatus: Boolean
  regenBrakingStatus: Boolean
  speedLimit: Float
  pickupControlLimit: Float
  brakeRegenLimit: Float
  zeroThrottleRegenLimit: Float
  currentLimit: Float
  eabsStatus: Boolean
  overVoltageLimit: Float
  underVoltageLimit: Float
  batteryMinVoltage: Float
  batteryMaxVoltage: Float
}

type ModelConfigSubscriptionPayload {
  mutation: MutationType!
  node: ModelConfig
  updatedFields: [String!]
  previousValues: ModelConfigPreviousValues
}

input ModelConfigSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ModelConfigWhereInput
  AND: [ModelConfigSubscriptionWhereInput!]
  OR: [ModelConfigSubscriptionWhereInput!]
  NOT: [ModelConfigSubscriptionWhereInput!]
}

input ModelConfigUpdateInput {
  speedDivisor: Float
  odoDivisor: Float
  accessType: ModelAccessType
  wheelDiameter: Float
  maxSpeed: Float
  model: ModelUpdateOneWithoutConfigInput
  hillAssistStatus: Boolean
  parkingStatus: Boolean
  regenBrakingStatus: Boolean
  speedLimit: Float
  pickupControlLimit: Float
  brakeRegenLimit: Float
  zeroThrottleRegenLimit: Float
  currentLimit: Float
  eabsStatus: Boolean
  overVoltageLimit: Float
  underVoltageLimit: Float
  batteryMinVoltage: Float
  batteryMaxVoltage: Float
}

input ModelConfigUpdateManyMutationInput {
  speedDivisor: Float
  odoDivisor: Float
  accessType: ModelAccessType
  wheelDiameter: Float
  maxSpeed: Float
  hillAssistStatus: Boolean
  parkingStatus: Boolean
  regenBrakingStatus: Boolean
  speedLimit: Float
  pickupControlLimit: Float
  brakeRegenLimit: Float
  zeroThrottleRegenLimit: Float
  currentLimit: Float
  eabsStatus: Boolean
  overVoltageLimit: Float
  underVoltageLimit: Float
  batteryMinVoltage: Float
  batteryMaxVoltage: Float
}

input ModelConfigUpdateOneWithoutModelInput {
  create: ModelConfigCreateWithoutModelInput
  update: ModelConfigUpdateWithoutModelDataInput
  upsert: ModelConfigUpsertWithoutModelInput
  delete: Boolean
  disconnect: Boolean
  connect: ModelConfigWhereUniqueInput
}

input ModelConfigUpdateWithoutModelDataInput {
  speedDivisor: Float
  odoDivisor: Float
  accessType: ModelAccessType
  wheelDiameter: Float
  maxSpeed: Float
  hillAssistStatus: Boolean
  parkingStatus: Boolean
  regenBrakingStatus: Boolean
  speedLimit: Float
  pickupControlLimit: Float
  brakeRegenLimit: Float
  zeroThrottleRegenLimit: Float
  currentLimit: Float
  eabsStatus: Boolean
  overVoltageLimit: Float
  underVoltageLimit: Float
  batteryMinVoltage: Float
  batteryMaxVoltage: Float
}

input ModelConfigUpsertWithoutModelInput {
  update: ModelConfigUpdateWithoutModelDataInput!
  create: ModelConfigCreateWithoutModelInput!
}

input ModelConfigWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  speedDivisor: Float
  speedDivisor_not: Float
  speedDivisor_in: [Float!]
  speedDivisor_not_in: [Float!]
  speedDivisor_lt: Float
  speedDivisor_lte: Float
  speedDivisor_gt: Float
  speedDivisor_gte: Float
  odoDivisor: Float
  odoDivisor_not: Float
  odoDivisor_in: [Float!]
  odoDivisor_not_in: [Float!]
  odoDivisor_lt: Float
  odoDivisor_lte: Float
  odoDivisor_gt: Float
  odoDivisor_gte: Float
  accessType: ModelAccessType
  accessType_not: ModelAccessType
  accessType_in: [ModelAccessType!]
  accessType_not_in: [ModelAccessType!]
  wheelDiameter: Float
  wheelDiameter_not: Float
  wheelDiameter_in: [Float!]
  wheelDiameter_not_in: [Float!]
  wheelDiameter_lt: Float
  wheelDiameter_lte: Float
  wheelDiameter_gt: Float
  wheelDiameter_gte: Float
  maxSpeed: Float
  maxSpeed_not: Float
  maxSpeed_in: [Float!]
  maxSpeed_not_in: [Float!]
  maxSpeed_lt: Float
  maxSpeed_lte: Float
  maxSpeed_gt: Float
  maxSpeed_gte: Float
  model: ModelWhereInput
  hillAssistStatus: Boolean
  hillAssistStatus_not: Boolean
  parkingStatus: Boolean
  parkingStatus_not: Boolean
  regenBrakingStatus: Boolean
  regenBrakingStatus_not: Boolean
  speedLimit: Float
  speedLimit_not: Float
  speedLimit_in: [Float!]
  speedLimit_not_in: [Float!]
  speedLimit_lt: Float
  speedLimit_lte: Float
  speedLimit_gt: Float
  speedLimit_gte: Float
  pickupControlLimit: Float
  pickupControlLimit_not: Float
  pickupControlLimit_in: [Float!]
  pickupControlLimit_not_in: [Float!]
  pickupControlLimit_lt: Float
  pickupControlLimit_lte: Float
  pickupControlLimit_gt: Float
  pickupControlLimit_gte: Float
  brakeRegenLimit: Float
  brakeRegenLimit_not: Float
  brakeRegenLimit_in: [Float!]
  brakeRegenLimit_not_in: [Float!]
  brakeRegenLimit_lt: Float
  brakeRegenLimit_lte: Float
  brakeRegenLimit_gt: Float
  brakeRegenLimit_gte: Float
  zeroThrottleRegenLimit: Float
  zeroThrottleRegenLimit_not: Float
  zeroThrottleRegenLimit_in: [Float!]
  zeroThrottleRegenLimit_not_in: [Float!]
  zeroThrottleRegenLimit_lt: Float
  zeroThrottleRegenLimit_lte: Float
  zeroThrottleRegenLimit_gt: Float
  zeroThrottleRegenLimit_gte: Float
  currentLimit: Float
  currentLimit_not: Float
  currentLimit_in: [Float!]
  currentLimit_not_in: [Float!]
  currentLimit_lt: Float
  currentLimit_lte: Float
  currentLimit_gt: Float
  currentLimit_gte: Float
  eabsStatus: Boolean
  eabsStatus_not: Boolean
  overVoltageLimit: Float
  overVoltageLimit_not: Float
  overVoltageLimit_in: [Float!]
  overVoltageLimit_not_in: [Float!]
  overVoltageLimit_lt: Float
  overVoltageLimit_lte: Float
  overVoltageLimit_gt: Float
  overVoltageLimit_gte: Float
  underVoltageLimit: Float
  underVoltageLimit_not: Float
  underVoltageLimit_in: [Float!]
  underVoltageLimit_not_in: [Float!]
  underVoltageLimit_lt: Float
  underVoltageLimit_lte: Float
  underVoltageLimit_gt: Float
  underVoltageLimit_gte: Float
  batteryMinVoltage: Float
  batteryMinVoltage_not: Float
  batteryMinVoltage_in: [Float!]
  batteryMinVoltage_not_in: [Float!]
  batteryMinVoltage_lt: Float
  batteryMinVoltage_lte: Float
  batteryMinVoltage_gt: Float
  batteryMinVoltage_gte: Float
  batteryMaxVoltage: Float
  batteryMaxVoltage_not: Float
  batteryMaxVoltage_in: [Float!]
  batteryMaxVoltage_not_in: [Float!]
  batteryMaxVoltage_lt: Float
  batteryMaxVoltage_lte: Float
  batteryMaxVoltage_gt: Float
  batteryMaxVoltage_gte: Float
  AND: [ModelConfigWhereInput!]
  OR: [ModelConfigWhereInput!]
  NOT: [ModelConfigWhereInput!]
}

input ModelConfigWhereUniqueInput {
  id: ID
}

type ModelConnection {
  pageInfo: PageInfo!
  edges: [ModelEdge]!
  aggregate: AggregateModel!
}

input ModelCreateInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  company: CompanyCreateOneWithoutModelsInput
  imageFile: FileCreateOneInput
  image: String
  components: ProductCreateManyInput
  specs: ProductSpecCreateManyInput
  config: ModelConfigCreateOneWithoutModelInput
  vehicles: VehicleCreateManyWithoutModelInput
}

input ModelCreateManyWithoutCompanyInput {
  create: [ModelCreateWithoutCompanyInput!]
  connect: [ModelWhereUniqueInput!]
}

input ModelCreateOneWithoutConfigInput {
  create: ModelCreateWithoutConfigInput
  connect: ModelWhereUniqueInput
}

input ModelCreateOneWithoutVehiclesInput {
  create: ModelCreateWithoutVehiclesInput
  connect: ModelWhereUniqueInput
}

input ModelCreateWithoutCompanyInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  imageFile: FileCreateOneInput
  image: String
  components: ProductCreateManyInput
  specs: ProductSpecCreateManyInput
  config: ModelConfigCreateOneWithoutModelInput
  vehicles: VehicleCreateManyWithoutModelInput
}

input ModelCreateWithoutConfigInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  company: CompanyCreateOneWithoutModelsInput
  imageFile: FileCreateOneInput
  image: String
  components: ProductCreateManyInput
  specs: ProductSpecCreateManyInput
  vehicles: VehicleCreateManyWithoutModelInput
}

input ModelCreateWithoutVehiclesInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  company: CompanyCreateOneWithoutModelsInput
  imageFile: FileCreateOneInput
  image: String
  components: ProductCreateManyInput
  specs: ProductSpecCreateManyInput
  config: ModelConfigCreateOneWithoutModelInput
}

type ModelEdge {
  node: Model!
  cursor: String!
}

enum ModelOrderByInput {
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  status_ASC
  status_DESC
  name_ASC
  name_DESC
  key_ASC
  key_DESC
  type_ASC
  type_DESC
  image_ASC
  image_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ModelPreviousValues {
  id: ID!
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType!
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ModelScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  isActive: Boolean
  isActive_not: Boolean
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  type: VehicleType
  type_not: VehicleType
  type_in: [VehicleType!]
  type_not_in: [VehicleType!]
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ModelScalarWhereInput!]
  OR: [ModelScalarWhereInput!]
  NOT: [ModelScalarWhereInput!]
}

type ModelSubscriptionPayload {
  mutation: MutationType!
  node: Model
  updatedFields: [String!]
  previousValues: ModelPreviousValues
}

input ModelSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ModelWhereInput
  AND: [ModelSubscriptionWhereInput!]
  OR: [ModelSubscriptionWhereInput!]
  NOT: [ModelSubscriptionWhereInput!]
}

input ModelUpdateInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  company: CompanyUpdateOneWithoutModelsInput
  imageFile: FileUpdateOneInput
  image: String
  components: ProductUpdateManyInput
  specs: ProductSpecUpdateManyInput
  config: ModelConfigUpdateOneWithoutModelInput
  vehicles: VehicleUpdateManyWithoutModelInput
}

input ModelUpdateManyDataInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  image: String
}

input ModelUpdateManyMutationInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  image: String
}

input ModelUpdateManyWithoutCompanyInput {
  create: [ModelCreateWithoutCompanyInput!]
  delete: [ModelWhereUniqueInput!]
  connect: [ModelWhereUniqueInput!]
  set: [ModelWhereUniqueInput!]
  disconnect: [ModelWhereUniqueInput!]
  update: [ModelUpdateWithWhereUniqueWithoutCompanyInput!]
  upsert: [ModelUpsertWithWhereUniqueWithoutCompanyInput!]
  deleteMany: [ModelScalarWhereInput!]
  updateMany: [ModelUpdateManyWithWhereNestedInput!]
}

input ModelUpdateManyWithWhereNestedInput {
  where: ModelScalarWhereInput!
  data: ModelUpdateManyDataInput!
}

input ModelUpdateOneWithoutConfigInput {
  create: ModelCreateWithoutConfigInput
  update: ModelUpdateWithoutConfigDataInput
  upsert: ModelUpsertWithoutConfigInput
  delete: Boolean
  disconnect: Boolean
  connect: ModelWhereUniqueInput
}

input ModelUpdateOneWithoutVehiclesInput {
  create: ModelCreateWithoutVehiclesInput
  update: ModelUpdateWithoutVehiclesDataInput
  upsert: ModelUpsertWithoutVehiclesInput
  delete: Boolean
  disconnect: Boolean
  connect: ModelWhereUniqueInput
}

input ModelUpdateWithoutCompanyDataInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  imageFile: FileUpdateOneInput
  image: String
  components: ProductUpdateManyInput
  specs: ProductSpecUpdateManyInput
  config: ModelConfigUpdateOneWithoutModelInput
  vehicles: VehicleUpdateManyWithoutModelInput
}

input ModelUpdateWithoutConfigDataInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  company: CompanyUpdateOneWithoutModelsInput
  imageFile: FileUpdateOneInput
  image: String
  components: ProductUpdateManyInput
  specs: ProductSpecUpdateManyInput
  vehicles: VehicleUpdateManyWithoutModelInput
}

input ModelUpdateWithoutVehiclesDataInput {
  isActive: Boolean
  status: statusType
  name: String
  key: String
  type: VehicleType
  company: CompanyUpdateOneWithoutModelsInput
  imageFile: FileUpdateOneInput
  image: String
  components: ProductUpdateManyInput
  specs: ProductSpecUpdateManyInput
  config: ModelConfigUpdateOneWithoutModelInput
}

input ModelUpdateWithWhereUniqueWithoutCompanyInput {
  where: ModelWhereUniqueInput!
  data: ModelUpdateWithoutCompanyDataInput!
}

input ModelUpsertWithoutConfigInput {
  update: ModelUpdateWithoutConfigDataInput!
  create: ModelCreateWithoutConfigInput!
}

input ModelUpsertWithoutVehiclesInput {
  update: ModelUpdateWithoutVehiclesDataInput!
  create: ModelCreateWithoutVehiclesInput!
}

input ModelUpsertWithWhereUniqueWithoutCompanyInput {
  where: ModelWhereUniqueInput!
  update: ModelUpdateWithoutCompanyDataInput!
  create: ModelCreateWithoutCompanyInput!
}

input ModelWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  isActive: Boolean
  isActive_not: Boolean
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  type: VehicleType
  type_not: VehicleType
  type_in: [VehicleType!]
  type_not_in: [VehicleType!]
  company: CompanyWhereInput
  imageFile: FileWhereInput
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  components_every: ProductWhereInput
  components_some: ProductWhereInput
  components_none: ProductWhereInput
  specs_every: ProductSpecWhereInput
  specs_some: ProductSpecWhereInput
  specs_none: ProductSpecWhereInput
  config: ModelConfigWhereInput
  vehicles_every: VehicleWhereInput
  vehicles_some: VehicleWhereInput
  vehicles_none: VehicleWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ModelWhereInput!]
  OR: [ModelWhereInput!]
  NOT: [ModelWhereInput!]
}

input ModelWhereUniqueInput {
  id: ID
  key: String
}

type Mutation {
  createAutoIncrement(data: AutoIncrementCreateInput!): AutoIncrement!
  updateAutoIncrement(data: AutoIncrementUpdateInput!, where: AutoIncrementWhereUniqueInput!): AutoIncrement
  updateManyAutoIncrements(data: AutoIncrementUpdateManyMutationInput!, where: AutoIncrementWhereInput): BatchPayload!
  upsertAutoIncrement(where: AutoIncrementWhereUniqueInput!, create: AutoIncrementCreateInput!, update: AutoIncrementUpdateInput!): AutoIncrement!
  deleteAutoIncrement(where: AutoIncrementWhereUniqueInput!): AutoIncrement
  deleteManyAutoIncrements(where: AutoIncrementWhereInput): BatchPayload!
  createBuyer(data: BuyerCreateInput!): Buyer!
  updateBuyer(data: BuyerUpdateInput!, where: BuyerWhereUniqueInput!): Buyer
  updateManyBuyers(data: BuyerUpdateManyMutationInput!, where: BuyerWhereInput): BatchPayload!
  upsertBuyer(where: BuyerWhereUniqueInput!, create: BuyerCreateInput!, update: BuyerUpdateInput!): Buyer!
  deleteBuyer(where: BuyerWhereUniqueInput!): Buyer
  deleteManyBuyers(where: BuyerWhereInput): BatchPayload!
  createCompany(data: CompanyCreateInput!): Company!
  updateCompany(data: CompanyUpdateInput!, where: CompanyWhereUniqueInput!): Company
  updateManyCompanies(data: CompanyUpdateManyMutationInput!, where: CompanyWhereInput): BatchPayload!
  upsertCompany(where: CompanyWhereUniqueInput!, create: CompanyCreateInput!, update: CompanyUpdateInput!): Company!
  deleteCompany(where: CompanyWhereUniqueInput!): Company
  deleteManyCompanies(where: CompanyWhereInput): BatchPayload!
  createComponent(data: ComponentCreateInput!): Component!
  updateComponent(data: ComponentUpdateInput!, where: ComponentWhereUniqueInput!): Component
  updateManyComponents(data: ComponentUpdateManyMutationInput!, where: ComponentWhereInput): BatchPayload!
  upsertComponent(where: ComponentWhereUniqueInput!, create: ComponentCreateInput!, update: ComponentUpdateInput!): Component!
  deleteComponent(where: ComponentWhereUniqueInput!): Component
  deleteManyComponents(where: ComponentWhereInput): BatchPayload!
  createDevice(data: DeviceCreateInput!): Device!
  updateDevice(data: DeviceUpdateInput!, where: DeviceWhereUniqueInput!): Device
  updateManyDevices(data: DeviceUpdateManyMutationInput!, where: DeviceWhereInput): BatchPayload!
  upsertDevice(where: DeviceWhereUniqueInput!, create: DeviceCreateInput!, update: DeviceUpdateInput!): Device!
  deleteDevice(where: DeviceWhereUniqueInput!): Device
  deleteManyDevices(where: DeviceWhereInput): BatchPayload!
  createFile(data: FileCreateInput!): File!
  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
  updateManyFiles(data: FileUpdateManyMutationInput!, where: FileWhereInput): BatchPayload!
  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!
  deleteFile(where: FileWhereUniqueInput!): File
  deleteManyFiles(where: FileWhereInput): BatchPayload!
  createFirebaseProfile(data: FirebaseProfileCreateInput!): FirebaseProfile!
  updateFirebaseProfile(data: FirebaseProfileUpdateInput!, where: FirebaseProfileWhereUniqueInput!): FirebaseProfile
  updateManyFirebaseProfiles(data: FirebaseProfileUpdateManyMutationInput!, where: FirebaseProfileWhereInput): BatchPayload!
  upsertFirebaseProfile(where: FirebaseProfileWhereUniqueInput!, create: FirebaseProfileCreateInput!, update: FirebaseProfileUpdateInput!): FirebaseProfile!
  deleteFirebaseProfile(where: FirebaseProfileWhereUniqueInput!): FirebaseProfile
  deleteManyFirebaseProfiles(where: FirebaseProfileWhereInput): BatchPayload!
  createInvoice(data: InvoiceCreateInput!): Invoice!
  updateInvoice(data: InvoiceUpdateInput!, where: InvoiceWhereUniqueInput!): Invoice
  updateManyInvoices(data: InvoiceUpdateManyMutationInput!, where: InvoiceWhereInput): BatchPayload!
  upsertInvoice(where: InvoiceWhereUniqueInput!, create: InvoiceCreateInput!, update: InvoiceUpdateInput!): Invoice!
  deleteInvoice(where: InvoiceWhereUniqueInput!): Invoice
  deleteManyInvoices(where: InvoiceWhereInput): BatchPayload!
  createModel(data: ModelCreateInput!): Model!
  updateModel(data: ModelUpdateInput!, where: ModelWhereUniqueInput!): Model
  updateManyModels(data: ModelUpdateManyMutationInput!, where: ModelWhereInput): BatchPayload!
  upsertModel(where: ModelWhereUniqueInput!, create: ModelCreateInput!, update: ModelUpdateInput!): Model!
  deleteModel(where: ModelWhereUniqueInput!): Model
  deleteManyModels(where: ModelWhereInput): BatchPayload!
  createModelConfig(data: ModelConfigCreateInput!): ModelConfig!
  updateModelConfig(data: ModelConfigUpdateInput!, where: ModelConfigWhereUniqueInput!): ModelConfig
  updateManyModelConfigs(data: ModelConfigUpdateManyMutationInput!, where: ModelConfigWhereInput): BatchPayload!
  upsertModelConfig(where: ModelConfigWhereUniqueInput!, create: ModelConfigCreateInput!, update: ModelConfigUpdateInput!): ModelConfig!
  deleteModelConfig(where: ModelConfigWhereUniqueInput!): ModelConfig
  deleteManyModelConfigs(where: ModelConfigWhereInput): BatchPayload!
  createPeripheral(data: PeripheralCreateInput!): Peripheral!
  updatePeripheral(data: PeripheralUpdateInput!, where: PeripheralWhereUniqueInput!): Peripheral
  upsertPeripheral(where: PeripheralWhereUniqueInput!, create: PeripheralCreateInput!, update: PeripheralUpdateInput!): Peripheral!
  deletePeripheral(where: PeripheralWhereUniqueInput!): Peripheral
  deleteManyPeripherals(where: PeripheralWhereInput): BatchPayload!
  createPost(data: PostCreateInput!): Post!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  deletePost(where: PostWhereUniqueInput!): Post
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  createProduct(data: ProductCreateInput!): Product!
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateManyProducts(data: ProductUpdateManyMutationInput!, where: ProductWhereInput): BatchPayload!
  upsertProduct(where: ProductWhereUniqueInput!, create: ProductCreateInput!, update: ProductUpdateInput!): Product!
  deleteProduct(where: ProductWhereUniqueInput!): Product
  deleteManyProducts(where: ProductWhereInput): BatchPayload!
  createProductSpec(data: ProductSpecCreateInput!): ProductSpec!
  updateProductSpec(data: ProductSpecUpdateInput!, where: ProductSpecWhereUniqueInput!): ProductSpec
  updateManyProductSpecs(data: ProductSpecUpdateManyMutationInput!, where: ProductSpecWhereInput): BatchPayload!
  upsertProductSpec(where: ProductSpecWhereUniqueInput!, create: ProductSpecCreateInput!, update: ProductSpecUpdateInput!): ProductSpec!
  deleteProductSpec(where: ProductSpecWhereUniqueInput!): ProductSpec
  deleteManyProductSpecs(where: ProductSpecWhereInput): BatchPayload!
  createRide(data: RideCreateInput!): Ride!
  updateRide(data: RideUpdateInput!, where: RideWhereUniqueInput!): Ride
  updateManyRides(data: RideUpdateManyMutationInput!, where: RideWhereInput): BatchPayload!
  upsertRide(where: RideWhereUniqueInput!, create: RideCreateInput!, update: RideUpdateInput!): Ride!
  deleteRide(where: RideWhereUniqueInput!): Ride
  deleteManyRides(where: RideWhereInput): BatchPayload!
  createServiceTicket(data: ServiceTicketCreateInput!): ServiceTicket!
  updateServiceTicket(data: ServiceTicketUpdateInput!, where: ServiceTicketWhereUniqueInput!): ServiceTicket
  updateManyServiceTickets(data: ServiceTicketUpdateManyMutationInput!, where: ServiceTicketWhereInput): BatchPayload!
  upsertServiceTicket(where: ServiceTicketWhereUniqueInput!, create: ServiceTicketCreateInput!, update: ServiceTicketUpdateInput!): ServiceTicket!
  deleteServiceTicket(where: ServiceTicketWhereUniqueInput!): ServiceTicket
  deleteManyServiceTickets(where: ServiceTicketWhereInput): BatchPayload!
  createStakeHolder(data: StakeHolderCreateInput!): StakeHolder!
  updateStakeHolder(data: StakeHolderUpdateInput!, where: StakeHolderWhereUniqueInput!): StakeHolder
  updateManyStakeHolders(data: StakeHolderUpdateManyMutationInput!, where: StakeHolderWhereInput): BatchPayload!
  upsertStakeHolder(where: StakeHolderWhereUniqueInput!, create: StakeHolderCreateInput!, update: StakeHolderUpdateInput!): StakeHolder!
  deleteStakeHolder(where: StakeHolderWhereUniqueInput!): StakeHolder
  deleteManyStakeHolders(where: StakeHolderWhereInput): BatchPayload!
  createTicketActivity(data: TicketActivityCreateInput!): TicketActivity!
  updateTicketActivity(data: TicketActivityUpdateInput!, where: TicketActivityWhereUniqueInput!): TicketActivity
  updateManyTicketActivities(data: TicketActivityUpdateManyMutationInput!, where: TicketActivityWhereInput): BatchPayload!
  upsertTicketActivity(where: TicketActivityWhereUniqueInput!, create: TicketActivityCreateInput!, update: TicketActivityUpdateInput!): TicketActivity!
  deleteTicketActivity(where: TicketActivityWhereUniqueInput!): TicketActivity
  deleteManyTicketActivities(where: TicketActivityWhereInput): BatchPayload!
  createTrackingPermission(data: TrackingPermissionCreateInput!): TrackingPermission!
  updateTrackingPermission(data: TrackingPermissionUpdateInput!, where: TrackingPermissionWhereUniqueInput!): TrackingPermission
  updateManyTrackingPermissions(data: TrackingPermissionUpdateManyMutationInput!, where: TrackingPermissionWhereInput): BatchPayload!
  upsertTrackingPermission(where: TrackingPermissionWhereUniqueInput!, create: TrackingPermissionCreateInput!, update: TrackingPermissionUpdateInput!): TrackingPermission!
  deleteTrackingPermission(where: TrackingPermissionWhereUniqueInput!): TrackingPermission
  deleteManyTrackingPermissions(where: TrackingPermissionWhereInput): BatchPayload!
  createTxInfo(data: TxInfoCreateInput!): TxInfo!
  updateTxInfo(data: TxInfoUpdateInput!, where: TxInfoWhereUniqueInput!): TxInfo
  updateManyTxInfoes(data: TxInfoUpdateManyMutationInput!, where: TxInfoWhereInput): BatchPayload!
  upsertTxInfo(where: TxInfoWhereUniqueInput!, create: TxInfoCreateInput!, update: TxInfoUpdateInput!): TxInfo!
  deleteTxInfo(where: TxInfoWhereUniqueInput!): TxInfo
  deleteManyTxInfoes(where: TxInfoWhereInput): BatchPayload!
  createTxNode(data: TxNodeCreateInput!): TxNode!
  updateTxNode(data: TxNodeUpdateInput!, where: TxNodeWhereUniqueInput!): TxNode
  updateManyTxNodes(data: TxNodeUpdateManyMutationInput!, where: TxNodeWhereInput): BatchPayload!
  upsertTxNode(where: TxNodeWhereUniqueInput!, create: TxNodeCreateInput!, update: TxNodeUpdateInput!): TxNode!
  deleteTxNode(where: TxNodeWhereUniqueInput!): TxNode
  deleteManyTxNodes(where: TxNodeWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createVehicle(data: VehicleCreateInput!): Vehicle!
  updateVehicle(data: VehicleUpdateInput!, where: VehicleWhereUniqueInput!): Vehicle
  updateManyVehicles(data: VehicleUpdateManyMutationInput!, where: VehicleWhereInput): BatchPayload!
  upsertVehicle(where: VehicleWhereUniqueInput!, create: VehicleCreateInput!, update: VehicleUpdateInput!): Vehicle!
  deleteVehicle(where: VehicleWhereUniqueInput!): Vehicle
  deleteManyVehicles(where: VehicleWhereInput): BatchPayload!
  createWarranty(data: WarrantyCreateInput!): Warranty!
  updateWarranty(data: WarrantyUpdateInput!, where: WarrantyWhereUniqueInput!): Warranty
  updateManyWarranties(data: WarrantyUpdateManyMutationInput!, where: WarrantyWhereInput): BatchPayload!
  upsertWarranty(where: WarrantyWhereUniqueInput!, create: WarrantyCreateInput!, update: WarrantyUpdateInput!): Warranty!
  deleteWarranty(where: WarrantyWhereUniqueInput!): Warranty
  deleteManyWarranties(where: WarrantyWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Peripheral {
  id: ID!
  device(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device!]
  vehicle: Vehicle
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PeripheralConnection {
  pageInfo: PageInfo!
  edges: [PeripheralEdge]!
  aggregate: AggregatePeripheral!
}

input PeripheralCreateInput {
  device: DeviceCreateManyInput
  vehicle: VehicleCreateOneWithoutPeripheralInput
}

input PeripheralCreateOneWithoutVehicleInput {
  create: PeripheralCreateWithoutVehicleInput
  connect: PeripheralWhereUniqueInput
}

input PeripheralCreateWithoutVehicleInput {
  device: DeviceCreateManyInput
}

type PeripheralEdge {
  node: Peripheral!
  cursor: String!
}

enum PeripheralOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PeripheralPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PeripheralSubscriptionPayload {
  mutation: MutationType!
  node: Peripheral
  updatedFields: [String!]
  previousValues: PeripheralPreviousValues
}

input PeripheralSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PeripheralWhereInput
  AND: [PeripheralSubscriptionWhereInput!]
  OR: [PeripheralSubscriptionWhereInput!]
  NOT: [PeripheralSubscriptionWhereInput!]
}

input PeripheralUpdateInput {
  device: DeviceUpdateManyInput
  vehicle: VehicleUpdateOneWithoutPeripheralInput
}

input PeripheralUpdateOneWithoutVehicleInput {
  create: PeripheralCreateWithoutVehicleInput
  update: PeripheralUpdateWithoutVehicleDataInput
  upsert: PeripheralUpsertWithoutVehicleInput
  delete: Boolean
  disconnect: Boolean
  connect: PeripheralWhereUniqueInput
}

input PeripheralUpdateWithoutVehicleDataInput {
  device: DeviceUpdateManyInput
}

input PeripheralUpsertWithoutVehicleInput {
  update: PeripheralUpdateWithoutVehicleDataInput!
  create: PeripheralCreateWithoutVehicleInput!
}

input PeripheralWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  device_every: DeviceWhereInput
  device_some: DeviceWhereInput
  device_none: DeviceWhereInput
  vehicle: VehicleWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [PeripheralWhereInput!]
  OR: [PeripheralWhereInput!]
  NOT: [PeripheralWhereInput!]
}

input PeripheralWhereUniqueInput {
  id: ID
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  text: String!
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  isPublished: Boolean
  title: String!
  text: String!
}

type PostEdge {
  node: Post!
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  isPublished_ASC
  isPublished_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
}

type PostPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  text: String!
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PostWhereInput
  AND: [PostSubscriptionWhereInput!]
  OR: [PostSubscriptionWhereInput!]
  NOT: [PostSubscriptionWhereInput!]
}

input PostUpdateInput {
  isPublished: Boolean
  title: String
  text: String
}

input PostUpdateManyMutationInput {
  isPublished: Boolean
  title: String
  text: String
}

input PostWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  isPublished: Boolean
  isPublished_not: Boolean
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
}

input PostWhereUniqueInput {
  id: ID
}

type Product {
  id: ID!
  type: ProductType
  name: String
  key: String
  specs(where: ProductSpecWhereInput, orderBy: ProductSpecOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpec!]
  status: statusType
  image: File
  imageBuffer: String
  inventory(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Component!]
  company: Company
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductConnection {
  pageInfo: PageInfo!
  edges: [ProductEdge]!
  aggregate: AggregateProduct!
}

input ProductCreateInput {
  type: ProductType
  name: String
  key: String
  specs: ProductSpecCreateManyInput
  status: statusType
  image: FileCreateOneInput
  imageBuffer: String
  inventory: ComponentCreateManyWithoutPrototypeInput
  company: CompanyCreateOneWithoutComponentsInput
}

input ProductCreateManyInput {
  create: [ProductCreateInput!]
  connect: [ProductWhereUniqueInput!]
}

input ProductCreateManyWithoutCompanyInput {
  create: [ProductCreateWithoutCompanyInput!]
  connect: [ProductWhereUniqueInput!]
}

input ProductCreateOneWithoutInventoryInput {
  create: ProductCreateWithoutInventoryInput
  connect: ProductWhereUniqueInput
}

input ProductCreateWithoutCompanyInput {
  type: ProductType
  name: String
  key: String
  specs: ProductSpecCreateManyInput
  status: statusType
  image: FileCreateOneInput
  imageBuffer: String
  inventory: ComponentCreateManyWithoutPrototypeInput
}

input ProductCreateWithoutInventoryInput {
  type: ProductType
  name: String
  key: String
  specs: ProductSpecCreateManyInput
  status: statusType
  image: FileCreateOneInput
  imageBuffer: String
  company: CompanyCreateOneWithoutComponentsInput
}

type ProductEdge {
  node: Product!
  cursor: String!
}

enum ProductOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  key_ASC
  key_DESC
  status_ASC
  status_DESC
  imageBuffer_ASC
  imageBuffer_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProductPreviousValues {
  id: ID!
  type: ProductType
  name: String
  key: String
  status: statusType
  imageBuffer: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProductScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: ProductType
  type_not: ProductType
  type_in: [ProductType!]
  type_not_in: [ProductType!]
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  imageBuffer: String
  imageBuffer_not: String
  imageBuffer_in: [String!]
  imageBuffer_not_in: [String!]
  imageBuffer_lt: String
  imageBuffer_lte: String
  imageBuffer_gt: String
  imageBuffer_gte: String
  imageBuffer_contains: String
  imageBuffer_not_contains: String
  imageBuffer_starts_with: String
  imageBuffer_not_starts_with: String
  imageBuffer_ends_with: String
  imageBuffer_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProductScalarWhereInput!]
  OR: [ProductScalarWhereInput!]
  NOT: [ProductScalarWhereInput!]
}

type ProductSpec {
  id: ID!
  key: String
  value: String
  unit: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductSpecConnection {
  pageInfo: PageInfo!
  edges: [ProductSpecEdge]!
  aggregate: AggregateProductSpec!
}

input ProductSpecCreateInput {
  key: String
  value: String
  unit: String
}

input ProductSpecCreateManyInput {
  create: [ProductSpecCreateInput!]
  connect: [ProductSpecWhereUniqueInput!]
}

type ProductSpecEdge {
  node: ProductSpec!
  cursor: String!
}

enum ProductSpecOrderByInput {
  id_ASC
  id_DESC
  key_ASC
  key_DESC
  value_ASC
  value_DESC
  unit_ASC
  unit_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProductSpecPreviousValues {
  id: ID!
  key: String
  value: String
  unit: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProductSpecScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProductSpecScalarWhereInput!]
  OR: [ProductSpecScalarWhereInput!]
  NOT: [ProductSpecScalarWhereInput!]
}

type ProductSpecSubscriptionPayload {
  mutation: MutationType!
  node: ProductSpec
  updatedFields: [String!]
  previousValues: ProductSpecPreviousValues
}

input ProductSpecSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProductSpecWhereInput
  AND: [ProductSpecSubscriptionWhereInput!]
  OR: [ProductSpecSubscriptionWhereInput!]
  NOT: [ProductSpecSubscriptionWhereInput!]
}

input ProductSpecUpdateDataInput {
  key: String
  value: String
  unit: String
}

input ProductSpecUpdateInput {
  key: String
  value: String
  unit: String
}

input ProductSpecUpdateManyDataInput {
  key: String
  value: String
  unit: String
}

input ProductSpecUpdateManyInput {
  create: [ProductSpecCreateInput!]
  update: [ProductSpecUpdateWithWhereUniqueNestedInput!]
  upsert: [ProductSpecUpsertWithWhereUniqueNestedInput!]
  delete: [ProductSpecWhereUniqueInput!]
  connect: [ProductSpecWhereUniqueInput!]
  set: [ProductSpecWhereUniqueInput!]
  disconnect: [ProductSpecWhereUniqueInput!]
  deleteMany: [ProductSpecScalarWhereInput!]
  updateMany: [ProductSpecUpdateManyWithWhereNestedInput!]
}

input ProductSpecUpdateManyMutationInput {
  key: String
  value: String
  unit: String
}

input ProductSpecUpdateManyWithWhereNestedInput {
  where: ProductSpecScalarWhereInput!
  data: ProductSpecUpdateManyDataInput!
}

input ProductSpecUpdateWithWhereUniqueNestedInput {
  where: ProductSpecWhereUniqueInput!
  data: ProductSpecUpdateDataInput!
}

input ProductSpecUpsertWithWhereUniqueNestedInput {
  where: ProductSpecWhereUniqueInput!
  update: ProductSpecUpdateDataInput!
  create: ProductSpecCreateInput!
}

input ProductSpecWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProductSpecWhereInput!]
  OR: [ProductSpecWhereInput!]
  NOT: [ProductSpecWhereInput!]
}

input ProductSpecWhereUniqueInput {
  id: ID
}

type ProductSubscriptionPayload {
  mutation: MutationType!
  node: Product
  updatedFields: [String!]
  previousValues: ProductPreviousValues
}

input ProductSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProductWhereInput
  AND: [ProductSubscriptionWhereInput!]
  OR: [ProductSubscriptionWhereInput!]
  NOT: [ProductSubscriptionWhereInput!]
}

enum ProductType {
  BATTERY
  CONTROLLER
  SPEEDOMETER
  TYRE
  MOTOR
  CHASSIS
  VEHICLE
  OTHERS
  DCCONVERTER
  LIGHTS
  SWITCHES
}

input ProductUpdateDataInput {
  type: ProductType
  name: String
  key: String
  specs: ProductSpecUpdateManyInput
  status: statusType
  image: FileUpdateOneInput
  imageBuffer: String
  inventory: ComponentUpdateManyWithoutPrototypeInput
  company: CompanyUpdateOneWithoutComponentsInput
}

input ProductUpdateInput {
  type: ProductType
  name: String
  key: String
  specs: ProductSpecUpdateManyInput
  status: statusType
  image: FileUpdateOneInput
  imageBuffer: String
  inventory: ComponentUpdateManyWithoutPrototypeInput
  company: CompanyUpdateOneWithoutComponentsInput
}

input ProductUpdateManyDataInput {
  type: ProductType
  name: String
  key: String
  status: statusType
  imageBuffer: String
}

input ProductUpdateManyInput {
  create: [ProductCreateInput!]
  update: [ProductUpdateWithWhereUniqueNestedInput!]
  upsert: [ProductUpsertWithWhereUniqueNestedInput!]
  delete: [ProductWhereUniqueInput!]
  connect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  disconnect: [ProductWhereUniqueInput!]
  deleteMany: [ProductScalarWhereInput!]
  updateMany: [ProductUpdateManyWithWhereNestedInput!]
}

input ProductUpdateManyMutationInput {
  type: ProductType
  name: String
  key: String
  status: statusType
  imageBuffer: String
}

input ProductUpdateManyWithoutCompanyInput {
  create: [ProductCreateWithoutCompanyInput!]
  delete: [ProductWhereUniqueInput!]
  connect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  disconnect: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutCompanyInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutCompanyInput!]
  deleteMany: [ProductScalarWhereInput!]
  updateMany: [ProductUpdateManyWithWhereNestedInput!]
}

input ProductUpdateManyWithWhereNestedInput {
  where: ProductScalarWhereInput!
  data: ProductUpdateManyDataInput!
}

input ProductUpdateOneWithoutInventoryInput {
  create: ProductCreateWithoutInventoryInput
  update: ProductUpdateWithoutInventoryDataInput
  upsert: ProductUpsertWithoutInventoryInput
  delete: Boolean
  disconnect: Boolean
  connect: ProductWhereUniqueInput
}

input ProductUpdateWithoutCompanyDataInput {
  type: ProductType
  name: String
  key: String
  specs: ProductSpecUpdateManyInput
  status: statusType
  image: FileUpdateOneInput
  imageBuffer: String
  inventory: ComponentUpdateManyWithoutPrototypeInput
}

input ProductUpdateWithoutInventoryDataInput {
  type: ProductType
  name: String
  key: String
  specs: ProductSpecUpdateManyInput
  status: statusType
  image: FileUpdateOneInput
  imageBuffer: String
  company: CompanyUpdateOneWithoutComponentsInput
}

input ProductUpdateWithWhereUniqueNestedInput {
  where: ProductWhereUniqueInput!
  data: ProductUpdateDataInput!
}

input ProductUpdateWithWhereUniqueWithoutCompanyInput {
  where: ProductWhereUniqueInput!
  data: ProductUpdateWithoutCompanyDataInput!
}

input ProductUpsertWithoutInventoryInput {
  update: ProductUpdateWithoutInventoryDataInput!
  create: ProductCreateWithoutInventoryInput!
}

input ProductUpsertWithWhereUniqueNestedInput {
  where: ProductWhereUniqueInput!
  update: ProductUpdateDataInput!
  create: ProductCreateInput!
}

input ProductUpsertWithWhereUniqueWithoutCompanyInput {
  where: ProductWhereUniqueInput!
  update: ProductUpdateWithoutCompanyDataInput!
  create: ProductCreateWithoutCompanyInput!
}

input ProductWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: ProductType
  type_not: ProductType
  type_in: [ProductType!]
  type_not_in: [ProductType!]
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  key: String
  key_not: String
  key_in: [String!]
  key_not_in: [String!]
  key_lt: String
  key_lte: String
  key_gt: String
  key_gte: String
  key_contains: String
  key_not_contains: String
  key_starts_with: String
  key_not_starts_with: String
  key_ends_with: String
  key_not_ends_with: String
  specs_every: ProductSpecWhereInput
  specs_some: ProductSpecWhereInput
  specs_none: ProductSpecWhereInput
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  image: FileWhereInput
  imageBuffer: String
  imageBuffer_not: String
  imageBuffer_in: [String!]
  imageBuffer_not_in: [String!]
  imageBuffer_lt: String
  imageBuffer_lte: String
  imageBuffer_gt: String
  imageBuffer_gte: String
  imageBuffer_contains: String
  imageBuffer_not_contains: String
  imageBuffer_starts_with: String
  imageBuffer_not_starts_with: String
  imageBuffer_ends_with: String
  imageBuffer_not_ends_with: String
  inventory_every: ComponentWhereInput
  inventory_some: ComponentWhereInput
  inventory_none: ComponentWhereInput
  company: CompanyWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
}

input ProductWhereUniqueInput {
  id: ID
  key: String
}

enum Protocol {
  MOBILE
  IOT
  RIDE_SHARING
}

type Query {
  autoIncrement(where: AutoIncrementWhereUniqueInput!): AutoIncrement
  autoIncrements(where: AutoIncrementWhereInput, orderBy: AutoIncrementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AutoIncrement]!
  autoIncrementsConnection(where: AutoIncrementWhereInput, orderBy: AutoIncrementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AutoIncrementConnection!
  buyer(where: BuyerWhereUniqueInput!): Buyer
  buyers(where: BuyerWhereInput, orderBy: BuyerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Buyer]!
  buyersConnection(where: BuyerWhereInput, orderBy: BuyerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BuyerConnection!
  company(where: CompanyWhereUniqueInput!): Company
  companies(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company]!
  companiesConnection(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CompanyConnection!
  component(where: ComponentWhereUniqueInput!): Component
  components(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Component]!
  componentsConnection(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ComponentConnection!
  device(where: DeviceWhereUniqueInput!): Device
  devices(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device]!
  devicesConnection(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DeviceConnection!
  file(where: FileWhereUniqueInput!): File
  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!
  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!
  firebaseProfile(where: FirebaseProfileWhereUniqueInput!): FirebaseProfile
  firebaseProfiles(where: FirebaseProfileWhereInput, orderBy: FirebaseProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FirebaseProfile]!
  firebaseProfilesConnection(where: FirebaseProfileWhereInput, orderBy: FirebaseProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FirebaseProfileConnection!
  invoice(where: InvoiceWhereUniqueInput!): Invoice
  invoices(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invoice]!
  invoicesConnection(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InvoiceConnection!
  model(where: ModelWhereUniqueInput!): Model
  models(where: ModelWhereInput, orderBy: ModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Model]!
  modelsConnection(where: ModelWhereInput, orderBy: ModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ModelConnection!
  modelConfig(where: ModelConfigWhereUniqueInput!): ModelConfig
  modelConfigs(where: ModelConfigWhereInput, orderBy: ModelConfigOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ModelConfig]!
  modelConfigsConnection(where: ModelConfigWhereInput, orderBy: ModelConfigOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ModelConfigConnection!
  peripheral(where: PeripheralWhereUniqueInput!): Peripheral
  peripherals(where: PeripheralWhereInput, orderBy: PeripheralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Peripheral]!
  peripheralsConnection(where: PeripheralWhereInput, orderBy: PeripheralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PeripheralConnection!
  post(where: PostWhereUniqueInput!): Post
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  product(where: ProductWhereUniqueInput!): Product
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product]!
  productsConnection(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductConnection!
  productSpec(where: ProductSpecWhereUniqueInput!): ProductSpec
  productSpecs(where: ProductSpecWhereInput, orderBy: ProductSpecOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpec]!
  productSpecsConnection(where: ProductSpecWhereInput, orderBy: ProductSpecOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductSpecConnection!
  ride(where: RideWhereUniqueInput!): Ride
  rides(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ride]!
  ridesConnection(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RideConnection!
  serviceTicket(where: ServiceTicketWhereUniqueInput!): ServiceTicket
  serviceTickets(where: ServiceTicketWhereInput, orderBy: ServiceTicketOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ServiceTicket]!
  serviceTicketsConnection(where: ServiceTicketWhereInput, orderBy: ServiceTicketOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ServiceTicketConnection!
  stakeHolder(where: StakeHolderWhereUniqueInput!): StakeHolder
  stakeHolders(where: StakeHolderWhereInput, orderBy: StakeHolderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StakeHolder]!
  stakeHoldersConnection(where: StakeHolderWhereInput, orderBy: StakeHolderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StakeHolderConnection!
  ticketActivity(where: TicketActivityWhereUniqueInput!): TicketActivity
  ticketActivities(where: TicketActivityWhereInput, orderBy: TicketActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TicketActivity]!
  ticketActivitiesConnection(where: TicketActivityWhereInput, orderBy: TicketActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TicketActivityConnection!
  trackingPermission(where: TrackingPermissionWhereUniqueInput!): TrackingPermission
  trackingPermissions(where: TrackingPermissionWhereInput, orderBy: TrackingPermissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TrackingPermission]!
  trackingPermissionsConnection(where: TrackingPermissionWhereInput, orderBy: TrackingPermissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TrackingPermissionConnection!
  txInfo(where: TxInfoWhereUniqueInput!): TxInfo
  txInfoes(where: TxInfoWhereInput, orderBy: TxInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TxInfo]!
  txInfoesConnection(where: TxInfoWhereInput, orderBy: TxInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TxInfoConnection!
  txNode(where: TxNodeWhereUniqueInput!): TxNode
  txNodes(where: TxNodeWhereInput, orderBy: TxNodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TxNode]!
  txNodesConnection(where: TxNodeWhereInput, orderBy: TxNodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TxNodeConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  vehicle(where: VehicleWhereUniqueInput!): Vehicle
  vehicles(where: VehicleWhereInput, orderBy: VehicleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vehicle]!
  vehiclesConnection(where: VehicleWhereInput, orderBy: VehicleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VehicleConnection!
  warranty(where: WarrantyWhereUniqueInput!): Warranty
  warranties(where: WarrantyWhereInput, orderBy: WarrantyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Warranty]!
  warrantiesConnection(where: WarrantyWhereInput, orderBy: WarrantyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WarrantyConnection!
  node(id: ID!): Node
}

enum RentalStatus {
  AVAILABLE
  BOOKED
  INSTOCK
}

type Ride {
  id: ID!
  rider: User
  vehicle: Vehicle
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: [DateTime!]!
  rideStatus: RideStatus
  createdAt: DateTime!
  updatedAt: DateTime!
}

type RideConnection {
  pageInfo: PageInfo!
  edges: [RideEdge]!
  aggregate: AggregateRide!
}

input RideCreateInput {
  rider: UserCreateOneWithoutVehiclesDrivenInput
  vehicle: VehicleCreateOneWithoutRidesInput
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideCreatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideCreateManyWithoutRiderInput {
  create: [RideCreateWithoutRiderInput!]
  connect: [RideWhereUniqueInput!]
}

input RideCreateManyWithoutVehicleInput {
  create: [RideCreateWithoutVehicleInput!]
  connect: [RideWhereUniqueInput!]
}

input RideCreateOneInput {
  create: RideCreateInput
  connect: RideWhereUniqueInput
}

input RideCreatepauseActivitiesInput {
  set: [DateTime!]
}

input RideCreateWithoutRiderInput {
  vehicle: VehicleCreateOneWithoutRidesInput
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideCreatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideCreateWithoutVehicleInput {
  rider: UserCreateOneWithoutVehiclesDrivenInput
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideCreatepauseActivitiesInput
  rideStatus: RideStatus
}

type RideEdge {
  node: Ride!
  cursor: String!
}

enum RideOrderByInput {
  id_ASC
  id_DESC
  bookingTime_ASC
  bookingTime_DESC
  startTime_ASC
  startTime_DESC
  endTime_ASC
  endTime_DESC
  rideStatus_ASC
  rideStatus_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type RidePreviousValues {
  id: ID!
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: [DateTime!]!
  rideStatus: RideStatus
  createdAt: DateTime!
  updatedAt: DateTime!
}

input RideScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  bookingTime: DateTime
  bookingTime_not: DateTime
  bookingTime_in: [DateTime!]
  bookingTime_not_in: [DateTime!]
  bookingTime_lt: DateTime
  bookingTime_lte: DateTime
  bookingTime_gt: DateTime
  bookingTime_gte: DateTime
  startTime: DateTime
  startTime_not: DateTime
  startTime_in: [DateTime!]
  startTime_not_in: [DateTime!]
  startTime_lt: DateTime
  startTime_lte: DateTime
  startTime_gt: DateTime
  startTime_gte: DateTime
  endTime: DateTime
  endTime_not: DateTime
  endTime_in: [DateTime!]
  endTime_not_in: [DateTime!]
  endTime_lt: DateTime
  endTime_lte: DateTime
  endTime_gt: DateTime
  endTime_gte: DateTime
  rideStatus: RideStatus
  rideStatus_not: RideStatus
  rideStatus_in: [RideStatus!]
  rideStatus_not_in: [RideStatus!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [RideScalarWhereInput!]
  OR: [RideScalarWhereInput!]
  NOT: [RideScalarWhereInput!]
}

enum RideStatus {
  BOOKED
  ACTIVE
  COMPLETED
}

type RideSubscriptionPayload {
  mutation: MutationType!
  node: Ride
  updatedFields: [String!]
  previousValues: RidePreviousValues
}

input RideSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RideWhereInput
  AND: [RideSubscriptionWhereInput!]
  OR: [RideSubscriptionWhereInput!]
  NOT: [RideSubscriptionWhereInput!]
}

input RideUpdateDataInput {
  rider: UserUpdateOneWithoutVehiclesDrivenInput
  vehicle: VehicleUpdateOneWithoutRidesInput
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideUpdatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideUpdateInput {
  rider: UserUpdateOneWithoutVehiclesDrivenInput
  vehicle: VehicleUpdateOneWithoutRidesInput
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideUpdatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideUpdateManyDataInput {
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideUpdatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideUpdateManyMutationInput {
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideUpdatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideUpdateManyWithoutRiderInput {
  create: [RideCreateWithoutRiderInput!]
  delete: [RideWhereUniqueInput!]
  connect: [RideWhereUniqueInput!]
  set: [RideWhereUniqueInput!]
  disconnect: [RideWhereUniqueInput!]
  update: [RideUpdateWithWhereUniqueWithoutRiderInput!]
  upsert: [RideUpsertWithWhereUniqueWithoutRiderInput!]
  deleteMany: [RideScalarWhereInput!]
  updateMany: [RideUpdateManyWithWhereNestedInput!]
}

input RideUpdateManyWithoutVehicleInput {
  create: [RideCreateWithoutVehicleInput!]
  delete: [RideWhereUniqueInput!]
  connect: [RideWhereUniqueInput!]
  set: [RideWhereUniqueInput!]
  disconnect: [RideWhereUniqueInput!]
  update: [RideUpdateWithWhereUniqueWithoutVehicleInput!]
  upsert: [RideUpsertWithWhereUniqueWithoutVehicleInput!]
  deleteMany: [RideScalarWhereInput!]
  updateMany: [RideUpdateManyWithWhereNestedInput!]
}

input RideUpdateManyWithWhereNestedInput {
  where: RideScalarWhereInput!
  data: RideUpdateManyDataInput!
}

input RideUpdateOneInput {
  create: RideCreateInput
  update: RideUpdateDataInput
  upsert: RideUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: RideWhereUniqueInput
}

input RideUpdatepauseActivitiesInput {
  set: [DateTime!]
}

input RideUpdateWithoutRiderDataInput {
  vehicle: VehicleUpdateOneWithoutRidesInput
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideUpdatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideUpdateWithoutVehicleDataInput {
  rider: UserUpdateOneWithoutVehiclesDrivenInput
  bookingTime: DateTime
  startTime: DateTime
  endTime: DateTime
  pauseActivities: RideUpdatepauseActivitiesInput
  rideStatus: RideStatus
}

input RideUpdateWithWhereUniqueWithoutRiderInput {
  where: RideWhereUniqueInput!
  data: RideUpdateWithoutRiderDataInput!
}

input RideUpdateWithWhereUniqueWithoutVehicleInput {
  where: RideWhereUniqueInput!
  data: RideUpdateWithoutVehicleDataInput!
}

input RideUpsertNestedInput {
  update: RideUpdateDataInput!
  create: RideCreateInput!
}

input RideUpsertWithWhereUniqueWithoutRiderInput {
  where: RideWhereUniqueInput!
  update: RideUpdateWithoutRiderDataInput!
  create: RideCreateWithoutRiderInput!
}

input RideUpsertWithWhereUniqueWithoutVehicleInput {
  where: RideWhereUniqueInput!
  update: RideUpdateWithoutVehicleDataInput!
  create: RideCreateWithoutVehicleInput!
}

input RideWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  rider: UserWhereInput
  vehicle: VehicleWhereInput
  bookingTime: DateTime
  bookingTime_not: DateTime
  bookingTime_in: [DateTime!]
  bookingTime_not_in: [DateTime!]
  bookingTime_lt: DateTime
  bookingTime_lte: DateTime
  bookingTime_gt: DateTime
  bookingTime_gte: DateTime
  startTime: DateTime
  startTime_not: DateTime
  startTime_in: [DateTime!]
  startTime_not_in: [DateTime!]
  startTime_lt: DateTime
  startTime_lte: DateTime
  startTime_gt: DateTime
  startTime_gte: DateTime
  endTime: DateTime
  endTime_not: DateTime
  endTime_in: [DateTime!]
  endTime_not_in: [DateTime!]
  endTime_lt: DateTime
  endTime_lte: DateTime
  endTime_gt: DateTime
  endTime_gte: DateTime
  rideStatus: RideStatus
  rideStatus_not: RideStatus
  rideStatus_in: [RideStatus!]
  rideStatus_not_in: [RideStatus!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [RideWhereInput!]
  OR: [RideWhereInput!]
  NOT: [RideWhereInput!]
}

input RideWhereUniqueInput {
  id: ID
}

enum Role {
  ADMIN
  INVENTORY_MANAGER
  ASSEMBLER
  DISTRIBUTOR
  DEALER
  SALES
  OPERATIONS_RS_DEPLOY
  RIDER
  USER
  UNAUTHORISED
  DEV
}

enum ServiceStatus {
  RAISED
  PENDING
  INPROGRESS
  COMPLETED
  CLOSED
}

type ServiceTicket {
  id: ID!
  assignee: Company
  owner: Company
  vehicle: Vehicle
  title: String!
  description: String
  ticketImages(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File!]
  logoBuffer: [String!]!
  activities(where: TicketActivityWhereInput, orderBy: TicketActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TicketActivity!]
  tags: [String!]!
  status: ServiceStatus!
  user: User!
  number: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ServiceTicketConnection {
  pageInfo: PageInfo!
  edges: [ServiceTicketEdge]!
  aggregate: AggregateServiceTicket!
}

input ServiceTicketCreateInput {
  assignee: CompanyCreateOneInput
  owner: CompanyCreateOneInput
  vehicle: VehicleCreateOneInput
  title: String!
  description: String
  ticketImages: FileCreateManyInput
  logoBuffer: ServiceTicketCreatelogoBufferInput
  activities: TicketActivityCreateManyInput
  tags: ServiceTicketCreatetagsInput
  status: ServiceStatus
  user: UserCreateOneInput!
  number: String
}

input ServiceTicketCreatelogoBufferInput {
  set: [String!]
}

input ServiceTicketCreatetagsInput {
  set: [String!]
}

type ServiceTicketEdge {
  node: ServiceTicket!
  cursor: String!
}

enum ServiceTicketOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  status_ASC
  status_DESC
  number_ASC
  number_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ServiceTicketPreviousValues {
  id: ID!
  title: String!
  description: String
  logoBuffer: [String!]!
  tags: [String!]!
  status: ServiceStatus!
  number: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ServiceTicketSubscriptionPayload {
  mutation: MutationType!
  node: ServiceTicket
  updatedFields: [String!]
  previousValues: ServiceTicketPreviousValues
}

input ServiceTicketSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ServiceTicketWhereInput
  AND: [ServiceTicketSubscriptionWhereInput!]
  OR: [ServiceTicketSubscriptionWhereInput!]
  NOT: [ServiceTicketSubscriptionWhereInput!]
}

input ServiceTicketUpdateInput {
  assignee: CompanyUpdateOneInput
  owner: CompanyUpdateOneInput
  vehicle: VehicleUpdateOneInput
  title: String
  description: String
  ticketImages: FileUpdateManyInput
  logoBuffer: ServiceTicketUpdatelogoBufferInput
  activities: TicketActivityUpdateManyInput
  tags: ServiceTicketUpdatetagsInput
  status: ServiceStatus
  user: UserUpdateOneRequiredInput
  number: String
}

input ServiceTicketUpdatelogoBufferInput {
  set: [String!]
}

input ServiceTicketUpdateManyMutationInput {
  title: String
  description: String
  logoBuffer: ServiceTicketUpdatelogoBufferInput
  tags: ServiceTicketUpdatetagsInput
  status: ServiceStatus
  number: String
}

input ServiceTicketUpdatetagsInput {
  set: [String!]
}

input ServiceTicketWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  assignee: CompanyWhereInput
  owner: CompanyWhereInput
  vehicle: VehicleWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  ticketImages_every: FileWhereInput
  ticketImages_some: FileWhereInput
  ticketImages_none: FileWhereInput
  activities_every: TicketActivityWhereInput
  activities_some: TicketActivityWhereInput
  activities_none: TicketActivityWhereInput
  status: ServiceStatus
  status_not: ServiceStatus
  status_in: [ServiceStatus!]
  status_not_in: [ServiceStatus!]
  user: UserWhereInput
  number: String
  number_not: String
  number_in: [String!]
  number_not_in: [String!]
  number_lt: String
  number_lte: String
  number_gt: String
  number_gte: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ServiceTicketWhereInput!]
  OR: [ServiceTicketWhereInput!]
  NOT: [ServiceTicketWhereInput!]
}

input ServiceTicketWhereUniqueInput {
  id: ID
}

type StakeHolder {
  id: ID!
  dateReceived: DateTime
  owner: TxNode
  asset: TxNode
  txInfo: TxInfo
  previousStakeHolder: StakeHolder
  status: StakeHolderStatus
  createdAt: DateTime!
  updatedAt: DateTime!
}

type StakeHolderConnection {
  pageInfo: PageInfo!
  edges: [StakeHolderEdge]!
  aggregate: AggregateStakeHolder!
}

input StakeHolderCreateInput {
  dateReceived: DateTime
  owner: TxNodeCreateOneInput
  asset: TxNodeCreateOneInput
  txInfo: TxInfoCreateOneInput
  previousStakeHolder: StakeHolderCreateOneWithoutPreviousStakeHolderInput
  status: StakeHolderStatus
}

input StakeHolderCreateOneWithoutPreviousStakeHolderInput {
  create: StakeHolderCreateWithoutPreviousStakeHolderInput
  connect: StakeHolderWhereUniqueInput
}

input StakeHolderCreateWithoutPreviousStakeHolderInput {
  dateReceived: DateTime
  owner: TxNodeCreateOneInput
  asset: TxNodeCreateOneInput
  txInfo: TxInfoCreateOneInput
  status: StakeHolderStatus
}

type StakeHolderEdge {
  node: StakeHolder!
  cursor: String!
}

enum StakeHolderOrderByInput {
  id_ASC
  id_DESC
  dateReceived_ASC
  dateReceived_DESC
  status_ASC
  status_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type StakeHolderPreviousValues {
  id: ID!
  dateReceived: DateTime
  status: StakeHolderStatus
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum StakeHolderStatus {
  OWNER
  RENTAL
  PAST_OWNER
  PAST_RENTAL
}

type StakeHolderSubscriptionPayload {
  mutation: MutationType!
  node: StakeHolder
  updatedFields: [String!]
  previousValues: StakeHolderPreviousValues
}

input StakeHolderSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: StakeHolderWhereInput
  AND: [StakeHolderSubscriptionWhereInput!]
  OR: [StakeHolderSubscriptionWhereInput!]
  NOT: [StakeHolderSubscriptionWhereInput!]
}

input StakeHolderUpdateInput {
  dateReceived: DateTime
  owner: TxNodeUpdateOneInput
  asset: TxNodeUpdateOneInput
  txInfo: TxInfoUpdateOneInput
  previousStakeHolder: StakeHolderUpdateOneWithoutPreviousStakeHolderInput
  status: StakeHolderStatus
}

input StakeHolderUpdateManyMutationInput {
  dateReceived: DateTime
  status: StakeHolderStatus
}

input StakeHolderUpdateOneWithoutPreviousStakeHolderInput {
  create: StakeHolderCreateWithoutPreviousStakeHolderInput
  update: StakeHolderUpdateWithoutPreviousStakeHolderDataInput
  upsert: StakeHolderUpsertWithoutPreviousStakeHolderInput
  delete: Boolean
  disconnect: Boolean
  connect: StakeHolderWhereUniqueInput
}

input StakeHolderUpdateWithoutPreviousStakeHolderDataInput {
  dateReceived: DateTime
  owner: TxNodeUpdateOneInput
  asset: TxNodeUpdateOneInput
  txInfo: TxInfoUpdateOneInput
  status: StakeHolderStatus
}

input StakeHolderUpsertWithoutPreviousStakeHolderInput {
  update: StakeHolderUpdateWithoutPreviousStakeHolderDataInput!
  create: StakeHolderCreateWithoutPreviousStakeHolderInput!
}

input StakeHolderWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  dateReceived: DateTime
  dateReceived_not: DateTime
  dateReceived_in: [DateTime!]
  dateReceived_not_in: [DateTime!]
  dateReceived_lt: DateTime
  dateReceived_lte: DateTime
  dateReceived_gt: DateTime
  dateReceived_gte: DateTime
  owner: TxNodeWhereInput
  asset: TxNodeWhereInput
  txInfo: TxInfoWhereInput
  previousStakeHolder: StakeHolderWhereInput
  status: StakeHolderStatus
  status_not: StakeHolderStatus
  status_in: [StakeHolderStatus!]
  status_not_in: [StakeHolderStatus!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [StakeHolderWhereInput!]
  OR: [StakeHolderWhereInput!]
  NOT: [StakeHolderWhereInput!]
}

input StakeHolderWhereUniqueInput {
  id: ID
}

enum statusType {
  ACTIVE
  INACTIVE
  DELETED
  PENDING_APPROVAL
  INCOMPLETE_PROFILE
}

type Subscription {
  autoIncrement(where: AutoIncrementSubscriptionWhereInput): AutoIncrementSubscriptionPayload
  buyer(where: BuyerSubscriptionWhereInput): BuyerSubscriptionPayload
  company(where: CompanySubscriptionWhereInput): CompanySubscriptionPayload
  component(where: ComponentSubscriptionWhereInput): ComponentSubscriptionPayload
  device(where: DeviceSubscriptionWhereInput): DeviceSubscriptionPayload
  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload
  firebaseProfile(where: FirebaseProfileSubscriptionWhereInput): FirebaseProfileSubscriptionPayload
  invoice(where: InvoiceSubscriptionWhereInput): InvoiceSubscriptionPayload
  model(where: ModelSubscriptionWhereInput): ModelSubscriptionPayload
  modelConfig(where: ModelConfigSubscriptionWhereInput): ModelConfigSubscriptionPayload
  peripheral(where: PeripheralSubscriptionWhereInput): PeripheralSubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  product(where: ProductSubscriptionWhereInput): ProductSubscriptionPayload
  productSpec(where: ProductSpecSubscriptionWhereInput): ProductSpecSubscriptionPayload
  ride(where: RideSubscriptionWhereInput): RideSubscriptionPayload
  serviceTicket(where: ServiceTicketSubscriptionWhereInput): ServiceTicketSubscriptionPayload
  stakeHolder(where: StakeHolderSubscriptionWhereInput): StakeHolderSubscriptionPayload
  ticketActivity(where: TicketActivitySubscriptionWhereInput): TicketActivitySubscriptionPayload
  trackingPermission(where: TrackingPermissionSubscriptionWhereInput): TrackingPermissionSubscriptionPayload
  txInfo(where: TxInfoSubscriptionWhereInput): TxInfoSubscriptionPayload
  txNode(where: TxNodeSubscriptionWhereInput): TxNodeSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  vehicle(where: VehicleSubscriptionWhereInput): VehicleSubscriptionPayload
  warranty(where: WarrantySubscriptionWhereInput): WarrantySubscriptionPayload
}

type TicketActivity {
  id: ID!
  comment: String
  type: ActivityType!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TicketActivityConnection {
  pageInfo: PageInfo!
  edges: [TicketActivityEdge]!
  aggregate: AggregateTicketActivity!
}

input TicketActivityCreateInput {
  comment: String
  type: ActivityType
  user: UserCreateOneInput!
}

input TicketActivityCreateManyInput {
  create: [TicketActivityCreateInput!]
  connect: [TicketActivityWhereUniqueInput!]
}

type TicketActivityEdge {
  node: TicketActivity!
  cursor: String!
}

enum TicketActivityOrderByInput {
  id_ASC
  id_DESC
  comment_ASC
  comment_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TicketActivityPreviousValues {
  id: ID!
  comment: String
  type: ActivityType!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TicketActivityScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  comment: String
  comment_not: String
  comment_in: [String!]
  comment_not_in: [String!]
  comment_lt: String
  comment_lte: String
  comment_gt: String
  comment_gte: String
  comment_contains: String
  comment_not_contains: String
  comment_starts_with: String
  comment_not_starts_with: String
  comment_ends_with: String
  comment_not_ends_with: String
  type: ActivityType
  type_not: ActivityType
  type_in: [ActivityType!]
  type_not_in: [ActivityType!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TicketActivityScalarWhereInput!]
  OR: [TicketActivityScalarWhereInput!]
  NOT: [TicketActivityScalarWhereInput!]
}

type TicketActivitySubscriptionPayload {
  mutation: MutationType!
  node: TicketActivity
  updatedFields: [String!]
  previousValues: TicketActivityPreviousValues
}

input TicketActivitySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TicketActivityWhereInput
  AND: [TicketActivitySubscriptionWhereInput!]
  OR: [TicketActivitySubscriptionWhereInput!]
  NOT: [TicketActivitySubscriptionWhereInput!]
}

input TicketActivityUpdateDataInput {
  comment: String
  type: ActivityType
  user: UserUpdateOneRequiredInput
}

input TicketActivityUpdateInput {
  comment: String
  type: ActivityType
  user: UserUpdateOneRequiredInput
}

input TicketActivityUpdateManyDataInput {
  comment: String
  type: ActivityType
}

input TicketActivityUpdateManyInput {
  create: [TicketActivityCreateInput!]
  update: [TicketActivityUpdateWithWhereUniqueNestedInput!]
  upsert: [TicketActivityUpsertWithWhereUniqueNestedInput!]
  delete: [TicketActivityWhereUniqueInput!]
  connect: [TicketActivityWhereUniqueInput!]
  set: [TicketActivityWhereUniqueInput!]
  disconnect: [TicketActivityWhereUniqueInput!]
  deleteMany: [TicketActivityScalarWhereInput!]
  updateMany: [TicketActivityUpdateManyWithWhereNestedInput!]
}

input TicketActivityUpdateManyMutationInput {
  comment: String
  type: ActivityType
}

input TicketActivityUpdateManyWithWhereNestedInput {
  where: TicketActivityScalarWhereInput!
  data: TicketActivityUpdateManyDataInput!
}

input TicketActivityUpdateWithWhereUniqueNestedInput {
  where: TicketActivityWhereUniqueInput!
  data: TicketActivityUpdateDataInput!
}

input TicketActivityUpsertWithWhereUniqueNestedInput {
  where: TicketActivityWhereUniqueInput!
  update: TicketActivityUpdateDataInput!
  create: TicketActivityCreateInput!
}

input TicketActivityWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  comment: String
  comment_not: String
  comment_in: [String!]
  comment_not_in: [String!]
  comment_lt: String
  comment_lte: String
  comment_gt: String
  comment_gte: String
  comment_contains: String
  comment_not_contains: String
  comment_starts_with: String
  comment_not_starts_with: String
  comment_ends_with: String
  comment_not_ends_with: String
  type: ActivityType
  type_not: ActivityType
  type_in: [ActivityType!]
  type_not_in: [ActivityType!]
  user: UserWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TicketActivityWhereInput!]
  OR: [TicketActivityWhereInput!]
  NOT: [TicketActivityWhereInput!]
}

input TicketActivityWhereUniqueInput {
  id: ID
}

type TrackingPermission {
  id: ID!
  startTime: DateTime!
  endTime: DateTime!
  accessProvider: User
  accessors(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company!]
  vehicle: Vehicle!
  status: TrackingPermissionStatus!
}

type TrackingPermissionConnection {
  pageInfo: PageInfo!
  edges: [TrackingPermissionEdge]!
  aggregate: AggregateTrackingPermission!
}

input TrackingPermissionCreateInput {
  startTime: DateTime!
  endTime: DateTime!
  accessProvider: UserCreateOneWithoutTrackingRequestsInput
  accessors: CompanyCreateManyInput
  vehicle: VehicleCreateOneWithoutTrackingRequestsInput!
  status: TrackingPermissionStatus
}

input TrackingPermissionCreateManyWithoutAccessProviderInput {
  create: [TrackingPermissionCreateWithoutAccessProviderInput!]
  connect: [TrackingPermissionWhereUniqueInput!]
}

input TrackingPermissionCreateManyWithoutVehicleInput {
  create: [TrackingPermissionCreateWithoutVehicleInput!]
  connect: [TrackingPermissionWhereUniqueInput!]
}

input TrackingPermissionCreateWithoutAccessProviderInput {
  startTime: DateTime!
  endTime: DateTime!
  accessors: CompanyCreateManyInput
  vehicle: VehicleCreateOneWithoutTrackingRequestsInput!
  status: TrackingPermissionStatus
}

input TrackingPermissionCreateWithoutVehicleInput {
  startTime: DateTime!
  endTime: DateTime!
  accessProvider: UserCreateOneWithoutTrackingRequestsInput
  accessors: CompanyCreateManyInput
  status: TrackingPermissionStatus
}

type TrackingPermissionEdge {
  node: TrackingPermission!
  cursor: String!
}

enum TrackingPermissionOrderByInput {
  id_ASC
  id_DESC
  startTime_ASC
  startTime_DESC
  endTime_ASC
  endTime_DESC
  status_ASC
  status_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TrackingPermissionPreviousValues {
  id: ID!
  startTime: DateTime!
  endTime: DateTime!
  status: TrackingPermissionStatus!
}

input TrackingPermissionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  startTime: DateTime
  startTime_not: DateTime
  startTime_in: [DateTime!]
  startTime_not_in: [DateTime!]
  startTime_lt: DateTime
  startTime_lte: DateTime
  startTime_gt: DateTime
  startTime_gte: DateTime
  endTime: DateTime
  endTime_not: DateTime
  endTime_in: [DateTime!]
  endTime_not_in: [DateTime!]
  endTime_lt: DateTime
  endTime_lte: DateTime
  endTime_gt: DateTime
  endTime_gte: DateTime
  status: TrackingPermissionStatus
  status_not: TrackingPermissionStatus
  status_in: [TrackingPermissionStatus!]
  status_not_in: [TrackingPermissionStatus!]
  AND: [TrackingPermissionScalarWhereInput!]
  OR: [TrackingPermissionScalarWhereInput!]
  NOT: [TrackingPermissionScalarWhereInput!]
}

enum TrackingPermissionStatus {
  REQUESTED
  GRANTED
  REVOKED
  EXPIRED
}

type TrackingPermissionSubscriptionPayload {
  mutation: MutationType!
  node: TrackingPermission
  updatedFields: [String!]
  previousValues: TrackingPermissionPreviousValues
}

input TrackingPermissionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TrackingPermissionWhereInput
  AND: [TrackingPermissionSubscriptionWhereInput!]
  OR: [TrackingPermissionSubscriptionWhereInput!]
  NOT: [TrackingPermissionSubscriptionWhereInput!]
}

input TrackingPermissionUpdateInput {
  startTime: DateTime
  endTime: DateTime
  accessProvider: UserUpdateOneWithoutTrackingRequestsInput
  accessors: CompanyUpdateManyInput
  vehicle: VehicleUpdateOneRequiredWithoutTrackingRequestsInput
  status: TrackingPermissionStatus
}

input TrackingPermissionUpdateManyDataInput {
  startTime: DateTime
  endTime: DateTime
  status: TrackingPermissionStatus
}

input TrackingPermissionUpdateManyMutationInput {
  startTime: DateTime
  endTime: DateTime
  status: TrackingPermissionStatus
}

input TrackingPermissionUpdateManyWithoutAccessProviderInput {
  create: [TrackingPermissionCreateWithoutAccessProviderInput!]
  delete: [TrackingPermissionWhereUniqueInput!]
  connect: [TrackingPermissionWhereUniqueInput!]
  set: [TrackingPermissionWhereUniqueInput!]
  disconnect: [TrackingPermissionWhereUniqueInput!]
  update: [TrackingPermissionUpdateWithWhereUniqueWithoutAccessProviderInput!]
  upsert: [TrackingPermissionUpsertWithWhereUniqueWithoutAccessProviderInput!]
  deleteMany: [TrackingPermissionScalarWhereInput!]
  updateMany: [TrackingPermissionUpdateManyWithWhereNestedInput!]
}

input TrackingPermissionUpdateManyWithoutVehicleInput {
  create: [TrackingPermissionCreateWithoutVehicleInput!]
  delete: [TrackingPermissionWhereUniqueInput!]
  connect: [TrackingPermissionWhereUniqueInput!]
  set: [TrackingPermissionWhereUniqueInput!]
  disconnect: [TrackingPermissionWhereUniqueInput!]
  update: [TrackingPermissionUpdateWithWhereUniqueWithoutVehicleInput!]
  upsert: [TrackingPermissionUpsertWithWhereUniqueWithoutVehicleInput!]
  deleteMany: [TrackingPermissionScalarWhereInput!]
  updateMany: [TrackingPermissionUpdateManyWithWhereNestedInput!]
}

input TrackingPermissionUpdateManyWithWhereNestedInput {
  where: TrackingPermissionScalarWhereInput!
  data: TrackingPermissionUpdateManyDataInput!
}

input TrackingPermissionUpdateWithoutAccessProviderDataInput {
  startTime: DateTime
  endTime: DateTime
  accessors: CompanyUpdateManyInput
  vehicle: VehicleUpdateOneRequiredWithoutTrackingRequestsInput
  status: TrackingPermissionStatus
}

input TrackingPermissionUpdateWithoutVehicleDataInput {
  startTime: DateTime
  endTime: DateTime
  accessProvider: UserUpdateOneWithoutTrackingRequestsInput
  accessors: CompanyUpdateManyInput
  status: TrackingPermissionStatus
}

input TrackingPermissionUpdateWithWhereUniqueWithoutAccessProviderInput {
  where: TrackingPermissionWhereUniqueInput!
  data: TrackingPermissionUpdateWithoutAccessProviderDataInput!
}

input TrackingPermissionUpdateWithWhereUniqueWithoutVehicleInput {
  where: TrackingPermissionWhereUniqueInput!
  data: TrackingPermissionUpdateWithoutVehicleDataInput!
}

input TrackingPermissionUpsertWithWhereUniqueWithoutAccessProviderInput {
  where: TrackingPermissionWhereUniqueInput!
  update: TrackingPermissionUpdateWithoutAccessProviderDataInput!
  create: TrackingPermissionCreateWithoutAccessProviderInput!
}

input TrackingPermissionUpsertWithWhereUniqueWithoutVehicleInput {
  where: TrackingPermissionWhereUniqueInput!
  update: TrackingPermissionUpdateWithoutVehicleDataInput!
  create: TrackingPermissionCreateWithoutVehicleInput!
}

input TrackingPermissionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  startTime: DateTime
  startTime_not: DateTime
  startTime_in: [DateTime!]
  startTime_not_in: [DateTime!]
  startTime_lt: DateTime
  startTime_lte: DateTime
  startTime_gt: DateTime
  startTime_gte: DateTime
  endTime: DateTime
  endTime_not: DateTime
  endTime_in: [DateTime!]
  endTime_not_in: [DateTime!]
  endTime_lt: DateTime
  endTime_lte: DateTime
  endTime_gt: DateTime
  endTime_gte: DateTime
  accessProvider: UserWhereInput
  accessors_every: CompanyWhereInput
  accessors_some: CompanyWhereInput
  accessors_none: CompanyWhereInput
  vehicle: VehicleWhereInput
  status: TrackingPermissionStatus
  status_not: TrackingPermissionStatus
  status_in: [TrackingPermissionStatus!]
  status_not_in: [TrackingPermissionStatus!]
  AND: [TrackingPermissionWhereInput!]
  OR: [TrackingPermissionWhereInput!]
  NOT: [TrackingPermissionWhereInput!]
}

input TrackingPermissionWhereUniqueInput {
  id: ID
}

type TxInfo {
  id: ID!
  type: TxType
  invoice: Invoice
}

type TxInfoConnection {
  pageInfo: PageInfo!
  edges: [TxInfoEdge]!
  aggregate: AggregateTxInfo!
}

input TxInfoCreateInput {
  type: TxType
  invoice: InvoiceCreateOneInput
}

input TxInfoCreateOneInput {
  create: TxInfoCreateInput
  connect: TxInfoWhereUniqueInput
}

type TxInfoEdge {
  node: TxInfo!
  cursor: String!
}

enum TxInfoOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TxInfoPreviousValues {
  id: ID!
  type: TxType
}

type TxInfoSubscriptionPayload {
  mutation: MutationType!
  node: TxInfo
  updatedFields: [String!]
  previousValues: TxInfoPreviousValues
}

input TxInfoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TxInfoWhereInput
  AND: [TxInfoSubscriptionWhereInput!]
  OR: [TxInfoSubscriptionWhereInput!]
  NOT: [TxInfoSubscriptionWhereInput!]
}

input TxInfoUpdateDataInput {
  type: TxType
  invoice: InvoiceUpdateOneInput
}

input TxInfoUpdateInput {
  type: TxType
  invoice: InvoiceUpdateOneInput
}

input TxInfoUpdateManyMutationInput {
  type: TxType
}

input TxInfoUpdateOneInput {
  create: TxInfoCreateInput
  update: TxInfoUpdateDataInput
  upsert: TxInfoUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: TxInfoWhereUniqueInput
}

input TxInfoUpsertNestedInput {
  update: TxInfoUpdateDataInput!
  create: TxInfoCreateInput!
}

input TxInfoWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: TxType
  type_not: TxType
  type_in: [TxType!]
  type_not_in: [TxType!]
  invoice: InvoiceWhereInput
  AND: [TxInfoWhereInput!]
  OR: [TxInfoWhereInput!]
  NOT: [TxInfoWhereInput!]
}

input TxInfoWhereUniqueInput {
  id: ID
}

type TxNode {
  id: ID!
  type: TxNodeType
  company: Company
  component: Component
  user: User
  vehicle: Vehicle
}

type TxNodeConnection {
  pageInfo: PageInfo!
  edges: [TxNodeEdge]!
  aggregate: AggregateTxNode!
}

input TxNodeCreateInput {
  type: TxNodeType
  company: CompanyCreateOneWithoutTxInfoInput
  component: ComponentCreateOneWithoutTxInfoInput
  user: UserCreateOneWithoutTxInfoInput
  vehicle: VehicleCreateOneWithoutTxInfoInput
}

input TxNodeCreateOneInput {
  create: TxNodeCreateInput
  connect: TxNodeWhereUniqueInput
}

input TxNodeCreateOneWithoutCompanyInput {
  create: TxNodeCreateWithoutCompanyInput
  connect: TxNodeWhereUniqueInput
}

input TxNodeCreateOneWithoutComponentInput {
  create: TxNodeCreateWithoutComponentInput
  connect: TxNodeWhereUniqueInput
}

input TxNodeCreateOneWithoutUserInput {
  create: TxNodeCreateWithoutUserInput
  connect: TxNodeWhereUniqueInput
}

input TxNodeCreateOneWithoutVehicleInput {
  create: TxNodeCreateWithoutVehicleInput
  connect: TxNodeWhereUniqueInput
}

input TxNodeCreateWithoutCompanyInput {
  type: TxNodeType
  component: ComponentCreateOneWithoutTxInfoInput
  user: UserCreateOneWithoutTxInfoInput
  vehicle: VehicleCreateOneWithoutTxInfoInput
}

input TxNodeCreateWithoutComponentInput {
  type: TxNodeType
  company: CompanyCreateOneWithoutTxInfoInput
  user: UserCreateOneWithoutTxInfoInput
  vehicle: VehicleCreateOneWithoutTxInfoInput
}

input TxNodeCreateWithoutUserInput {
  type: TxNodeType
  company: CompanyCreateOneWithoutTxInfoInput
  component: ComponentCreateOneWithoutTxInfoInput
  vehicle: VehicleCreateOneWithoutTxInfoInput
}

input TxNodeCreateWithoutVehicleInput {
  type: TxNodeType
  company: CompanyCreateOneWithoutTxInfoInput
  component: ComponentCreateOneWithoutTxInfoInput
  user: UserCreateOneWithoutTxInfoInput
}

type TxNodeEdge {
  node: TxNode!
  cursor: String!
}

enum TxNodeOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TxNodePreviousValues {
  id: ID!
  type: TxNodeType
}

type TxNodeSubscriptionPayload {
  mutation: MutationType!
  node: TxNode
  updatedFields: [String!]
  previousValues: TxNodePreviousValues
}

input TxNodeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TxNodeWhereInput
  AND: [TxNodeSubscriptionWhereInput!]
  OR: [TxNodeSubscriptionWhereInput!]
  NOT: [TxNodeSubscriptionWhereInput!]
}

enum TxNodeType {
  COMPANY
  COMPONENT
  VEHICLE
  USER
}

input TxNodeUpdateDataInput {
  type: TxNodeType
  company: CompanyUpdateOneWithoutTxInfoInput
  component: ComponentUpdateOneWithoutTxInfoInput
  user: UserUpdateOneWithoutTxInfoInput
  vehicle: VehicleUpdateOneWithoutTxInfoInput
}

input TxNodeUpdateInput {
  type: TxNodeType
  company: CompanyUpdateOneWithoutTxInfoInput
  component: ComponentUpdateOneWithoutTxInfoInput
  user: UserUpdateOneWithoutTxInfoInput
  vehicle: VehicleUpdateOneWithoutTxInfoInput
}

input TxNodeUpdateManyMutationInput {
  type: TxNodeType
}

input TxNodeUpdateOneInput {
  create: TxNodeCreateInput
  update: TxNodeUpdateDataInput
  upsert: TxNodeUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: TxNodeWhereUniqueInput
}

input TxNodeUpdateOneWithoutCompanyInput {
  create: TxNodeCreateWithoutCompanyInput
  update: TxNodeUpdateWithoutCompanyDataInput
  upsert: TxNodeUpsertWithoutCompanyInput
  delete: Boolean
  disconnect: Boolean
  connect: TxNodeWhereUniqueInput
}

input TxNodeUpdateOneWithoutComponentInput {
  create: TxNodeCreateWithoutComponentInput
  update: TxNodeUpdateWithoutComponentDataInput
  upsert: TxNodeUpsertWithoutComponentInput
  delete: Boolean
  disconnect: Boolean
  connect: TxNodeWhereUniqueInput
}

input TxNodeUpdateOneWithoutUserInput {
  create: TxNodeCreateWithoutUserInput
  update: TxNodeUpdateWithoutUserDataInput
  upsert: TxNodeUpsertWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  connect: TxNodeWhereUniqueInput
}

input TxNodeUpdateOneWithoutVehicleInput {
  create: TxNodeCreateWithoutVehicleInput
  update: TxNodeUpdateWithoutVehicleDataInput
  upsert: TxNodeUpsertWithoutVehicleInput
  delete: Boolean
  disconnect: Boolean
  connect: TxNodeWhereUniqueInput
}

input TxNodeUpdateWithoutCompanyDataInput {
  type: TxNodeType
  component: ComponentUpdateOneWithoutTxInfoInput
  user: UserUpdateOneWithoutTxInfoInput
  vehicle: VehicleUpdateOneWithoutTxInfoInput
}

input TxNodeUpdateWithoutComponentDataInput {
  type: TxNodeType
  company: CompanyUpdateOneWithoutTxInfoInput
  user: UserUpdateOneWithoutTxInfoInput
  vehicle: VehicleUpdateOneWithoutTxInfoInput
}

input TxNodeUpdateWithoutUserDataInput {
  type: TxNodeType
  company: CompanyUpdateOneWithoutTxInfoInput
  component: ComponentUpdateOneWithoutTxInfoInput
  vehicle: VehicleUpdateOneWithoutTxInfoInput
}

input TxNodeUpdateWithoutVehicleDataInput {
  type: TxNodeType
  company: CompanyUpdateOneWithoutTxInfoInput
  component: ComponentUpdateOneWithoutTxInfoInput
  user: UserUpdateOneWithoutTxInfoInput
}

input TxNodeUpsertNestedInput {
  update: TxNodeUpdateDataInput!
  create: TxNodeCreateInput!
}

input TxNodeUpsertWithoutCompanyInput {
  update: TxNodeUpdateWithoutCompanyDataInput!
  create: TxNodeCreateWithoutCompanyInput!
}

input TxNodeUpsertWithoutComponentInput {
  update: TxNodeUpdateWithoutComponentDataInput!
  create: TxNodeCreateWithoutComponentInput!
}

input TxNodeUpsertWithoutUserInput {
  update: TxNodeUpdateWithoutUserDataInput!
  create: TxNodeCreateWithoutUserInput!
}

input TxNodeUpsertWithoutVehicleInput {
  update: TxNodeUpdateWithoutVehicleDataInput!
  create: TxNodeCreateWithoutVehicleInput!
}

input TxNodeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  type: TxNodeType
  type_not: TxNodeType
  type_in: [TxNodeType!]
  type_not_in: [TxNodeType!]
  company: CompanyWhereInput
  component: ComponentWhereInput
  user: UserWhereInput
  vehicle: VehicleWhereInput
  AND: [TxNodeWhereInput!]
  OR: [TxNodeWhereInput!]
  NOT: [TxNodeWhereInput!]
}

input TxNodeWhereUniqueInput {
  id: ID
}

enum TxType {
  PERMANENT
  RENTAL
  TEMPORARY
}

type User {
  address: String
  email: String
  openId: String
  txInfo: TxNode
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  id: ID!
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfile
  role: Role!
  company: Company
  status: statusType
  vehiclesDriven(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ride!]
  trackingRequests(where: TrackingPermissionWhereInput, orderBy: TrackingPermissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TrackingPermission!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeCreateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileCreateOneInput
  role: Role
  company: CompanyCreateOneWithoutUsersInput
  status: statusType
  vehiclesDriven: RideCreateManyWithoutRiderInput
  trackingRequests: TrackingPermissionCreateManyWithoutAccessProviderInput
}

input UserCreateManyWithoutCompanyInput {
  create: [UserCreateWithoutCompanyInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutTrackingRequestsInput {
  create: UserCreateWithoutTrackingRequestsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutTxInfoInput {
  create: UserCreateWithoutTxInfoInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutVehiclesDrivenInput {
  create: UserCreateWithoutVehiclesDrivenInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCompanyInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeCreateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileCreateOneInput
  role: Role
  status: statusType
  vehiclesDriven: RideCreateManyWithoutRiderInput
  trackingRequests: TrackingPermissionCreateManyWithoutAccessProviderInput
}

input UserCreateWithoutTrackingRequestsInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeCreateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileCreateOneInput
  role: Role
  company: CompanyCreateOneWithoutUsersInput
  status: statusType
  vehiclesDriven: RideCreateManyWithoutRiderInput
}

input UserCreateWithoutTxInfoInput {
  address: String
  email: String
  openId: String
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileCreateOneInput
  role: Role
  company: CompanyCreateOneWithoutUsersInput
  status: statusType
  vehiclesDriven: RideCreateManyWithoutRiderInput
  trackingRequests: TrackingPermissionCreateManyWithoutAccessProviderInput
}

input UserCreateWithoutVehiclesDrivenInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeCreateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileCreateOneInput
  role: Role
  company: CompanyCreateOneWithoutUsersInput
  status: statusType
  trackingRequests: TrackingPermissionCreateManyWithoutAccessProviderInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  address_ASC
  address_DESC
  email_ASC
  email_DESC
  openId_ASC
  openId_DESC
  unionId_ASC
  unionId_DESC
  dob_ASC
  dob_DESC
  phone_ASC
  phone_DESC
  altPhone1_ASC
  altPhone1_DESC
  altPhone2_ASC
  altPhone2_DESC
  gender_ASC
  gender_DESC
  id_ASC
  id_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  license_ASC
  license_DESC
  password_ASC
  password_DESC
  role_ASC
  role_DESC
  status_ASC
  status_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  address: String
  email: String
  openId: String
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  id: ID!
  firstName: String
  lastName: String
  license: String
  password: String
  role: Role!
  status: statusType
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UserScalarWhereInput {
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  openId: String
  openId_not: String
  openId_in: [String!]
  openId_not_in: [String!]
  openId_lt: String
  openId_lte: String
  openId_gt: String
  openId_gte: String
  openId_contains: String
  openId_not_contains: String
  openId_starts_with: String
  openId_not_starts_with: String
  openId_ends_with: String
  openId_not_ends_with: String
  unionId: String
  unionId_not: String
  unionId_in: [String!]
  unionId_not_in: [String!]
  unionId_lt: String
  unionId_lte: String
  unionId_gt: String
  unionId_gte: String
  unionId_contains: String
  unionId_not_contains: String
  unionId_starts_with: String
  unionId_not_starts_with: String
  unionId_ends_with: String
  unionId_not_ends_with: String
  dob: DateTime
  dob_not: DateTime
  dob_in: [DateTime!]
  dob_not_in: [DateTime!]
  dob_lt: DateTime
  dob_lte: DateTime
  dob_gt: DateTime
  dob_gte: DateTime
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  altPhone1: String
  altPhone1_not: String
  altPhone1_in: [String!]
  altPhone1_not_in: [String!]
  altPhone1_lt: String
  altPhone1_lte: String
  altPhone1_gt: String
  altPhone1_gte: String
  altPhone1_contains: String
  altPhone1_not_contains: String
  altPhone1_starts_with: String
  altPhone1_not_starts_with: String
  altPhone1_ends_with: String
  altPhone1_not_ends_with: String
  altPhone2: String
  altPhone2_not: String
  altPhone2_in: [String!]
  altPhone2_not_in: [String!]
  altPhone2_lt: String
  altPhone2_lte: String
  altPhone2_gt: String
  altPhone2_gte: String
  altPhone2_contains: String
  altPhone2_not_contains: String
  altPhone2_starts_with: String
  altPhone2_not_starts_with: String
  altPhone2_ends_with: String
  altPhone2_not_ends_with: String
  gender: genderType
  gender_not: genderType
  gender_in: [genderType!]
  gender_not_in: [genderType!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  license: String
  license_not: String
  license_in: [String!]
  license_not_in: [String!]
  license_lt: String
  license_lte: String
  license_gt: String
  license_gte: String
  license_contains: String
  license_not_contains: String
  license_starts_with: String
  license_not_starts_with: String
  license_ends_with: String
  license_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  role: Role
  role_not: Role
  role_in: [Role!]
  role_not_in: [Role!]
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeUpdateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileUpdateOneInput
  role: Role
  company: CompanyUpdateOneWithoutUsersInput
  status: statusType
  vehiclesDriven: RideUpdateManyWithoutRiderInput
  trackingRequests: TrackingPermissionUpdateManyWithoutAccessProviderInput
}

input UserUpdateInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeUpdateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileUpdateOneInput
  role: Role
  company: CompanyUpdateOneWithoutUsersInput
  status: statusType
  vehiclesDriven: RideUpdateManyWithoutRiderInput
  trackingRequests: TrackingPermissionUpdateManyWithoutAccessProviderInput
}

input UserUpdateManyDataInput {
  address: String
  email: String
  openId: String
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  role: Role
  status: statusType
}

input UserUpdateManyMutationInput {
  address: String
  email: String
  openId: String
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  role: Role
  status: statusType
}

input UserUpdateManyWithoutCompanyInput {
  create: [UserCreateWithoutCompanyInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutCompanyInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutCompanyInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutTrackingRequestsInput {
  create: UserCreateWithoutTrackingRequestsInput
  update: UserUpdateWithoutTrackingRequestsDataInput
  upsert: UserUpsertWithoutTrackingRequestsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutTxInfoInput {
  create: UserCreateWithoutTxInfoInput
  update: UserUpdateWithoutTxInfoDataInput
  upsert: UserUpsertWithoutTxInfoInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutVehiclesDrivenInput {
  create: UserCreateWithoutVehiclesDrivenInput
  update: UserUpdateWithoutVehiclesDrivenDataInput
  upsert: UserUpsertWithoutVehiclesDrivenInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutCompanyDataInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeUpdateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileUpdateOneInput
  role: Role
  status: statusType
  vehiclesDriven: RideUpdateManyWithoutRiderInput
  trackingRequests: TrackingPermissionUpdateManyWithoutAccessProviderInput
}

input UserUpdateWithoutTrackingRequestsDataInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeUpdateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileUpdateOneInput
  role: Role
  company: CompanyUpdateOneWithoutUsersInput
  status: statusType
  vehiclesDriven: RideUpdateManyWithoutRiderInput
}

input UserUpdateWithoutTxInfoDataInput {
  address: String
  email: String
  openId: String
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileUpdateOneInput
  role: Role
  company: CompanyUpdateOneWithoutUsersInput
  status: statusType
  vehiclesDriven: RideUpdateManyWithoutRiderInput
  trackingRequests: TrackingPermissionUpdateManyWithoutAccessProviderInput
}

input UserUpdateWithoutVehiclesDrivenDataInput {
  address: String
  email: String
  openId: String
  txInfo: TxNodeUpdateOneWithoutUserInput
  unionId: String
  dob: DateTime
  phone: String
  altPhone1: String
  altPhone2: String
  gender: genderType
  firstName: String
  lastName: String
  license: String
  password: String
  firebase: FirebaseProfileUpdateOneInput
  role: Role
  company: CompanyUpdateOneWithoutUsersInput
  status: statusType
  trackingRequests: TrackingPermissionUpdateManyWithoutAccessProviderInput
}

input UserUpdateWithWhereUniqueWithoutCompanyInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutCompanyDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutTrackingRequestsInput {
  update: UserUpdateWithoutTrackingRequestsDataInput!
  create: UserCreateWithoutTrackingRequestsInput!
}

input UserUpsertWithoutTxInfoInput {
  update: UserUpdateWithoutTxInfoDataInput!
  create: UserCreateWithoutTxInfoInput!
}

input UserUpsertWithoutVehiclesDrivenInput {
  update: UserUpdateWithoutVehiclesDrivenDataInput!
  create: UserCreateWithoutVehiclesDrivenInput!
}

input UserUpsertWithWhereUniqueWithoutCompanyInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutCompanyDataInput!
  create: UserCreateWithoutCompanyInput!
}

input UserWhereInput {
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  openId: String
  openId_not: String
  openId_in: [String!]
  openId_not_in: [String!]
  openId_lt: String
  openId_lte: String
  openId_gt: String
  openId_gte: String
  openId_contains: String
  openId_not_contains: String
  openId_starts_with: String
  openId_not_starts_with: String
  openId_ends_with: String
  openId_not_ends_with: String
  txInfo: TxNodeWhereInput
  unionId: String
  unionId_not: String
  unionId_in: [String!]
  unionId_not_in: [String!]
  unionId_lt: String
  unionId_lte: String
  unionId_gt: String
  unionId_gte: String
  unionId_contains: String
  unionId_not_contains: String
  unionId_starts_with: String
  unionId_not_starts_with: String
  unionId_ends_with: String
  unionId_not_ends_with: String
  dob: DateTime
  dob_not: DateTime
  dob_in: [DateTime!]
  dob_not_in: [DateTime!]
  dob_lt: DateTime
  dob_lte: DateTime
  dob_gt: DateTime
  dob_gte: DateTime
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  altPhone1: String
  altPhone1_not: String
  altPhone1_in: [String!]
  altPhone1_not_in: [String!]
  altPhone1_lt: String
  altPhone1_lte: String
  altPhone1_gt: String
  altPhone1_gte: String
  altPhone1_contains: String
  altPhone1_not_contains: String
  altPhone1_starts_with: String
  altPhone1_not_starts_with: String
  altPhone1_ends_with: String
  altPhone1_not_ends_with: String
  altPhone2: String
  altPhone2_not: String
  altPhone2_in: [String!]
  altPhone2_not_in: [String!]
  altPhone2_lt: String
  altPhone2_lte: String
  altPhone2_gt: String
  altPhone2_gte: String
  altPhone2_contains: String
  altPhone2_not_contains: String
  altPhone2_starts_with: String
  altPhone2_not_starts_with: String
  altPhone2_ends_with: String
  altPhone2_not_ends_with: String
  gender: genderType
  gender_not: genderType
  gender_in: [genderType!]
  gender_not_in: [genderType!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  license: String
  license_not: String
  license_in: [String!]
  license_not_in: [String!]
  license_lt: String
  license_lte: String
  license_gt: String
  license_gte: String
  license_contains: String
  license_not_contains: String
  license_starts_with: String
  license_not_starts_with: String
  license_ends_with: String
  license_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  firebase: FirebaseProfileWhereInput
  role: Role
  role_not: Role
  role_in: [Role!]
  role_not_in: [Role!]
  company: CompanyWhereInput
  status: statusType
  status_not: statusType
  status_in: [statusType!]
  status_not_in: [statusType!]
  vehiclesDriven_every: RideWhereInput
  vehiclesDriven_some: RideWhereInput
  vehiclesDriven_none: RideWhereInput
  trackingRequests_every: TrackingPermissionWhereInput
  trackingRequests_some: TrackingPermissionWhereInput
  trackingRequests_none: TrackingPermissionWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  email: String
  openId: String
  unionId: String
  phone: String
  id: ID
}

type Vehicle {
  vin: String!
  id: ID!
  txInfo: TxNode
  status: VehicleStatus!
  model: Model
  dealer: Company
  distributor: Company
  oem: Company
  company: Company
  components(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Component!]
  specs(where: ProductSpecWhereInput, orderBy: ProductSpecOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProductSpec!]
  buyer: Buyer
  owner: User
  device: Device
  peripheral: Peripheral
  protocol: Protocol
  trackingRequests(where: TrackingPermissionWhereInput, orderBy: TrackingPermissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TrackingPermission!]
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ride!]
  currentRide: Ride
  createdAt: DateTime!
  updatedAt: DateTime!
}

type VehicleConnection {
  pageInfo: PageInfo!
  edges: [VehicleEdge]!
  aggregate: AggregateVehicle!
}

input VehicleCreateInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

input VehicleCreateManyWithoutCompanyInput {
  create: [VehicleCreateWithoutCompanyInput!]
  connect: [VehicleWhereUniqueInput!]
}

input VehicleCreateManyWithoutModelInput {
  create: [VehicleCreateWithoutModelInput!]
  connect: [VehicleWhereUniqueInput!]
}

input VehicleCreateOneInput {
  create: VehicleCreateInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateOneWithoutComponentsInput {
  create: VehicleCreateWithoutComponentsInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateOneWithoutDeviceInput {
  create: VehicleCreateWithoutDeviceInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateOneWithoutPeripheralInput {
  create: VehicleCreateWithoutPeripheralInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateOneWithoutRidesInput {
  create: VehicleCreateWithoutRidesInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateOneWithoutTrackingRequestsInput {
  create: VehicleCreateWithoutTrackingRequestsInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateOneWithoutTxInfoInput {
  create: VehicleCreateWithoutTxInfoInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateWithoutCompanyInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

input VehicleCreateWithoutComponentsInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

input VehicleCreateWithoutDeviceInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

input VehicleCreateWithoutModelInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

input VehicleCreateWithoutPeripheralInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

input VehicleCreateWithoutRidesInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  currentRide: RideCreateOneInput
}

input VehicleCreateWithoutTrackingRequestsInput {
  vin: String!
  txInfo: TxNodeCreateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

input VehicleCreateWithoutTxInfoInput {
  vin: String!
  status: VehicleStatus
  model: ModelCreateOneWithoutVehiclesInput
  dealer: CompanyCreateOneInput
  distributor: CompanyCreateOneInput
  oem: CompanyCreateOneInput
  company: CompanyCreateOneWithoutVehiclesInput
  components: ComponentCreateManyWithoutVehicleInput
  specs: ProductSpecCreateManyInput
  buyer: BuyerCreateOneInput
  owner: UserCreateOneInput
  device: DeviceCreateOneWithoutVehicleInput
  peripheral: PeripheralCreateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionCreateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideCreateManyWithoutVehicleInput
  currentRide: RideCreateOneInput
}

type VehicleEdge {
  node: Vehicle!
  cursor: String!
}

enum VehicleOrderByInput {
  vin_ASC
  vin_DESC
  id_ASC
  id_DESC
  status_ASC
  status_DESC
  protocol_ASC
  protocol_DESC
  isHealthy_ASC
  isHealthy_DESC
  lastMarkedLongitude_ASC
  lastMarkedLongitude_DESC
  lastMarkedLatitude_ASC
  lastMarkedLatitude_DESC
  rentalStatus_ASC
  rentalStatus_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VehiclePreviousValues {
  vin: String!
  id: ID!
  status: VehicleStatus!
  protocol: Protocol
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  createdAt: DateTime!
  updatedAt: DateTime!
}

input VehicleScalarWhereInput {
  vin: String
  vin_not: String
  vin_in: [String!]
  vin_not_in: [String!]
  vin_lt: String
  vin_lte: String
  vin_gt: String
  vin_gte: String
  vin_contains: String
  vin_not_contains: String
  vin_starts_with: String
  vin_not_starts_with: String
  vin_ends_with: String
  vin_not_ends_with: String
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  status: VehicleStatus
  status_not: VehicleStatus
  status_in: [VehicleStatus!]
  status_not_in: [VehicleStatus!]
  protocol: Protocol
  protocol_not: Protocol
  protocol_in: [Protocol!]
  protocol_not_in: [Protocol!]
  isHealthy: Boolean
  isHealthy_not: Boolean
  lastMarkedLongitude: String
  lastMarkedLongitude_not: String
  lastMarkedLongitude_in: [String!]
  lastMarkedLongitude_not_in: [String!]
  lastMarkedLongitude_lt: String
  lastMarkedLongitude_lte: String
  lastMarkedLongitude_gt: String
  lastMarkedLongitude_gte: String
  lastMarkedLongitude_contains: String
  lastMarkedLongitude_not_contains: String
  lastMarkedLongitude_starts_with: String
  lastMarkedLongitude_not_starts_with: String
  lastMarkedLongitude_ends_with: String
  lastMarkedLongitude_not_ends_with: String
  lastMarkedLatitude: String
  lastMarkedLatitude_not: String
  lastMarkedLatitude_in: [String!]
  lastMarkedLatitude_not_in: [String!]
  lastMarkedLatitude_lt: String
  lastMarkedLatitude_lte: String
  lastMarkedLatitude_gt: String
  lastMarkedLatitude_gte: String
  lastMarkedLatitude_contains: String
  lastMarkedLatitude_not_contains: String
  lastMarkedLatitude_starts_with: String
  lastMarkedLatitude_not_starts_with: String
  lastMarkedLatitude_ends_with: String
  lastMarkedLatitude_not_ends_with: String
  rentalStatus: RentalStatus
  rentalStatus_not: RentalStatus
  rentalStatus_in: [RentalStatus!]
  rentalStatus_not_in: [RentalStatus!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [VehicleScalarWhereInput!]
  OR: [VehicleScalarWhereInput!]
  NOT: [VehicleScalarWhereInput!]
}

enum VehicleStatus {
  UNSOLD
  UNASSIGNED
  SOLD
  ASSIGNED
  ASSIGNED_1
  RENTAL
  DELETED
}

type VehicleSubscriptionPayload {
  mutation: MutationType!
  node: Vehicle
  updatedFields: [String!]
  previousValues: VehiclePreviousValues
}

input VehicleSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VehicleWhereInput
  AND: [VehicleSubscriptionWhereInput!]
  OR: [VehicleSubscriptionWhereInput!]
  NOT: [VehicleSubscriptionWhereInput!]
}

enum VehicleType {
  TWO
  THREE
}

input VehicleUpdateDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateManyDataInput {
  vin: String
  status: VehicleStatus
  protocol: Protocol
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
}

input VehicleUpdateManyMutationInput {
  vin: String
  status: VehicleStatus
  protocol: Protocol
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
}

input VehicleUpdateManyWithoutCompanyInput {
  create: [VehicleCreateWithoutCompanyInput!]
  delete: [VehicleWhereUniqueInput!]
  connect: [VehicleWhereUniqueInput!]
  set: [VehicleWhereUniqueInput!]
  disconnect: [VehicleWhereUniqueInput!]
  update: [VehicleUpdateWithWhereUniqueWithoutCompanyInput!]
  upsert: [VehicleUpsertWithWhereUniqueWithoutCompanyInput!]
  deleteMany: [VehicleScalarWhereInput!]
  updateMany: [VehicleUpdateManyWithWhereNestedInput!]
}

input VehicleUpdateManyWithoutModelInput {
  create: [VehicleCreateWithoutModelInput!]
  delete: [VehicleWhereUniqueInput!]
  connect: [VehicleWhereUniqueInput!]
  set: [VehicleWhereUniqueInput!]
  disconnect: [VehicleWhereUniqueInput!]
  update: [VehicleUpdateWithWhereUniqueWithoutModelInput!]
  upsert: [VehicleUpsertWithWhereUniqueWithoutModelInput!]
  deleteMany: [VehicleScalarWhereInput!]
  updateMany: [VehicleUpdateManyWithWhereNestedInput!]
}

input VehicleUpdateManyWithWhereNestedInput {
  where: VehicleScalarWhereInput!
  data: VehicleUpdateManyDataInput!
}

input VehicleUpdateOneInput {
  create: VehicleCreateInput
  update: VehicleUpdateDataInput
  upsert: VehicleUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: VehicleWhereUniqueInput
}

input VehicleUpdateOneRequiredWithoutTrackingRequestsInput {
  create: VehicleCreateWithoutTrackingRequestsInput
  update: VehicleUpdateWithoutTrackingRequestsDataInput
  upsert: VehicleUpsertWithoutTrackingRequestsInput
  connect: VehicleWhereUniqueInput
}

input VehicleUpdateOneWithoutComponentsInput {
  create: VehicleCreateWithoutComponentsInput
  update: VehicleUpdateWithoutComponentsDataInput
  upsert: VehicleUpsertWithoutComponentsInput
  delete: Boolean
  disconnect: Boolean
  connect: VehicleWhereUniqueInput
}

input VehicleUpdateOneWithoutDeviceInput {
  create: VehicleCreateWithoutDeviceInput
  update: VehicleUpdateWithoutDeviceDataInput
  upsert: VehicleUpsertWithoutDeviceInput
  delete: Boolean
  disconnect: Boolean
  connect: VehicleWhereUniqueInput
}

input VehicleUpdateOneWithoutPeripheralInput {
  create: VehicleCreateWithoutPeripheralInput
  update: VehicleUpdateWithoutPeripheralDataInput
  upsert: VehicleUpsertWithoutPeripheralInput
  delete: Boolean
  disconnect: Boolean
  connect: VehicleWhereUniqueInput
}

input VehicleUpdateOneWithoutRidesInput {
  create: VehicleCreateWithoutRidesInput
  update: VehicleUpdateWithoutRidesDataInput
  upsert: VehicleUpsertWithoutRidesInput
  delete: Boolean
  disconnect: Boolean
  connect: VehicleWhereUniqueInput
}

input VehicleUpdateOneWithoutTxInfoInput {
  create: VehicleCreateWithoutTxInfoInput
  update: VehicleUpdateWithoutTxInfoDataInput
  upsert: VehicleUpsertWithoutTxInfoInput
  delete: Boolean
  disconnect: Boolean
  connect: VehicleWhereUniqueInput
}

input VehicleUpdateWithoutCompanyDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithoutComponentsDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithoutDeviceDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithoutModelDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithoutPeripheralDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithoutRidesDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithoutTrackingRequestsDataInput {
  vin: String
  txInfo: TxNodeUpdateOneWithoutVehicleInput
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithoutTxInfoDataInput {
  vin: String
  status: VehicleStatus
  model: ModelUpdateOneWithoutVehiclesInput
  dealer: CompanyUpdateOneInput
  distributor: CompanyUpdateOneInput
  oem: CompanyUpdateOneInput
  company: CompanyUpdateOneWithoutVehiclesInput
  components: ComponentUpdateManyWithoutVehicleInput
  specs: ProductSpecUpdateManyInput
  buyer: BuyerUpdateOneInput
  owner: UserUpdateOneInput
  device: DeviceUpdateOneWithoutVehicleInput
  peripheral: PeripheralUpdateOneWithoutVehicleInput
  protocol: Protocol
  trackingRequests: TrackingPermissionUpdateManyWithoutVehicleInput
  isHealthy: Boolean
  lastMarkedLongitude: String
  lastMarkedLatitude: String
  rentalStatus: RentalStatus
  rides: RideUpdateManyWithoutVehicleInput
  currentRide: RideUpdateOneInput
}

input VehicleUpdateWithWhereUniqueWithoutCompanyInput {
  where: VehicleWhereUniqueInput!
  data: VehicleUpdateWithoutCompanyDataInput!
}

input VehicleUpdateWithWhereUniqueWithoutModelInput {
  where: VehicleWhereUniqueInput!
  data: VehicleUpdateWithoutModelDataInput!
}

input VehicleUpsertNestedInput {
  update: VehicleUpdateDataInput!
  create: VehicleCreateInput!
}

input VehicleUpsertWithoutComponentsInput {
  update: VehicleUpdateWithoutComponentsDataInput!
  create: VehicleCreateWithoutComponentsInput!
}

input VehicleUpsertWithoutDeviceInput {
  update: VehicleUpdateWithoutDeviceDataInput!
  create: VehicleCreateWithoutDeviceInput!
}

input VehicleUpsertWithoutPeripheralInput {
  update: VehicleUpdateWithoutPeripheralDataInput!
  create: VehicleCreateWithoutPeripheralInput!
}

input VehicleUpsertWithoutRidesInput {
  update: VehicleUpdateWithoutRidesDataInput!
  create: VehicleCreateWithoutRidesInput!
}

input VehicleUpsertWithoutTrackingRequestsInput {
  update: VehicleUpdateWithoutTrackingRequestsDataInput!
  create: VehicleCreateWithoutTrackingRequestsInput!
}

input VehicleUpsertWithoutTxInfoInput {
  update: VehicleUpdateWithoutTxInfoDataInput!
  create: VehicleCreateWithoutTxInfoInput!
}

input VehicleUpsertWithWhereUniqueWithoutCompanyInput {
  where: VehicleWhereUniqueInput!
  update: VehicleUpdateWithoutCompanyDataInput!
  create: VehicleCreateWithoutCompanyInput!
}

input VehicleUpsertWithWhereUniqueWithoutModelInput {
  where: VehicleWhereUniqueInput!
  update: VehicleUpdateWithoutModelDataInput!
  create: VehicleCreateWithoutModelInput!
}

input VehicleWhereInput {
  vin: String
  vin_not: String
  vin_in: [String!]
  vin_not_in: [String!]
  vin_lt: String
  vin_lte: String
  vin_gt: String
  vin_gte: String
  vin_contains: String
  vin_not_contains: String
  vin_starts_with: String
  vin_not_starts_with: String
  vin_ends_with: String
  vin_not_ends_with: String
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  txInfo: TxNodeWhereInput
  status: VehicleStatus
  status_not: VehicleStatus
  status_in: [VehicleStatus!]
  status_not_in: [VehicleStatus!]
  model: ModelWhereInput
  dealer: CompanyWhereInput
  distributor: CompanyWhereInput
  oem: CompanyWhereInput
  company: CompanyWhereInput
  components_every: ComponentWhereInput
  components_some: ComponentWhereInput
  components_none: ComponentWhereInput
  specs_every: ProductSpecWhereInput
  specs_some: ProductSpecWhereInput
  specs_none: ProductSpecWhereInput
  buyer: BuyerWhereInput
  owner: UserWhereInput
  device: DeviceWhereInput
  peripheral: PeripheralWhereInput
  protocol: Protocol
  protocol_not: Protocol
  protocol_in: [Protocol!]
  protocol_not_in: [Protocol!]
  trackingRequests_every: TrackingPermissionWhereInput
  trackingRequests_some: TrackingPermissionWhereInput
  trackingRequests_none: TrackingPermissionWhereInput
  isHealthy: Boolean
  isHealthy_not: Boolean
  lastMarkedLongitude: String
  lastMarkedLongitude_not: String
  lastMarkedLongitude_in: [String!]
  lastMarkedLongitude_not_in: [String!]
  lastMarkedLongitude_lt: String
  lastMarkedLongitude_lte: String
  lastMarkedLongitude_gt: String
  lastMarkedLongitude_gte: String
  lastMarkedLongitude_contains: String
  lastMarkedLongitude_not_contains: String
  lastMarkedLongitude_starts_with: String
  lastMarkedLongitude_not_starts_with: String
  lastMarkedLongitude_ends_with: String
  lastMarkedLongitude_not_ends_with: String
  lastMarkedLatitude: String
  lastMarkedLatitude_not: String
  lastMarkedLatitude_in: [String!]
  lastMarkedLatitude_not_in: [String!]
  lastMarkedLatitude_lt: String
  lastMarkedLatitude_lte: String
  lastMarkedLatitude_gt: String
  lastMarkedLatitude_gte: String
  lastMarkedLatitude_contains: String
  lastMarkedLatitude_not_contains: String
  lastMarkedLatitude_starts_with: String
  lastMarkedLatitude_not_starts_with: String
  lastMarkedLatitude_ends_with: String
  lastMarkedLatitude_not_ends_with: String
  rentalStatus: RentalStatus
  rentalStatus_not: RentalStatus
  rentalStatus_in: [RentalStatus!]
  rentalStatus_not_in: [RentalStatus!]
  rides_every: RideWhereInput
  rides_some: RideWhereInput
  rides_none: RideWhereInput
  currentRide: RideWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [VehicleWhereInput!]
  OR: [VehicleWhereInput!]
  NOT: [VehicleWhereInput!]
}

input VehicleWhereUniqueInput {
  vin: String
  id: ID
}

type Warranty {
  id: ID!
  number: String
  expiry: DateTime
  status: WarrantyStatus
}

type WarrantyConnection {
  pageInfo: PageInfo!
  edges: [WarrantyEdge]!
  aggregate: AggregateWarranty!
}

input WarrantyCreateInput {
  number: String
  expiry: DateTime
  status: WarrantyStatus
}

input WarrantyCreateOneInput {
  create: WarrantyCreateInput
  connect: WarrantyWhereUniqueInput
}

type WarrantyEdge {
  node: Warranty!
  cursor: String!
}

enum WarrantyOrderByInput {
  id_ASC
  id_DESC
  number_ASC
  number_DESC
  expiry_ASC
  expiry_DESC
  status_ASC
  status_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type WarrantyPreviousValues {
  id: ID!
  number: String
  expiry: DateTime
  status: WarrantyStatus
}

enum WarrantyStatus {
  ACTIVATED
  EXPIRED
  DELETED
}

type WarrantySubscriptionPayload {
  mutation: MutationType!
  node: Warranty
  updatedFields: [String!]
  previousValues: WarrantyPreviousValues
}

input WarrantySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: WarrantyWhereInput
  AND: [WarrantySubscriptionWhereInput!]
  OR: [WarrantySubscriptionWhereInput!]
  NOT: [WarrantySubscriptionWhereInput!]
}

input WarrantyUpdateDataInput {
  number: String
  expiry: DateTime
  status: WarrantyStatus
}

input WarrantyUpdateInput {
  number: String
  expiry: DateTime
  status: WarrantyStatus
}

input WarrantyUpdateManyMutationInput {
  number: String
  expiry: DateTime
  status: WarrantyStatus
}

input WarrantyUpdateOneInput {
  create: WarrantyCreateInput
  update: WarrantyUpdateDataInput
  upsert: WarrantyUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: WarrantyWhereUniqueInput
}

input WarrantyUpsertNestedInput {
  update: WarrantyUpdateDataInput!
  create: WarrantyCreateInput!
}

input WarrantyWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  number: String
  number_not: String
  number_in: [String!]
  number_not_in: [String!]
  number_lt: String
  number_lte: String
  number_gt: String
  number_gte: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  expiry: DateTime
  expiry_not: DateTime
  expiry_in: [DateTime!]
  expiry_not_in: [DateTime!]
  expiry_lt: DateTime
  expiry_lte: DateTime
  expiry_gt: DateTime
  expiry_gte: DateTime
  status: WarrantyStatus
  status_not: WarrantyStatus
  status_in: [WarrantyStatus!]
  status_not_in: [WarrantyStatus!]
  AND: [WarrantyWhereInput!]
  OR: [WarrantyWhereInput!]
  NOT: [WarrantyWhereInput!]
}

input WarrantyWhereUniqueInput {
  id: ID
}
